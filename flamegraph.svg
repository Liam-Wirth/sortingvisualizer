<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="518" onload="init(evt)" viewBox="0 0 1200 518" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="518" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="501.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="501.00"> </text><svg id="frames" x="10" width="1180" total_samples="176534"><g><title>fc-match (45 samples, 0.03%)</title><rect x="0.0028%" y="453" width="0.0255%" height="15" fill="rgb(227,0,7)" fg:x="5" fg:w="45"/><text x="0.2528%" y="463.50"></text></g><g><title>[libc.so.6] (38 samples, 0.02%)</title><rect x="0.0397%" y="437" width="0.0215%" height="15" fill="rgb(217,0,24)" fg:x="70" fg:w="38"/><text x="0.2897%" y="447.50"></text></g><g><title>[libc.so.6] (38 samples, 0.02%)</title><rect x="0.0397%" y="421" width="0.0215%" height="15" fill="rgb(221,193,54)" fg:x="70" fg:w="38"/><text x="0.2897%" y="431.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (38 samples, 0.02%)</title><rect x="0.0397%" y="405" width="0.0215%" height="15" fill="rgb(248,212,6)" fg:x="70" fg:w="38"/><text x="0.2897%" y="415.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (38 samples, 0.02%)</title><rect x="0.0397%" y="389" width="0.0215%" height="15" fill="rgb(208,68,35)" fg:x="70" fg:w="38"/><text x="0.2897%" y="399.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (38 samples, 0.02%)</title><rect x="0.0397%" y="373" width="0.0215%" height="15" fill="rgb(232,128,0)" fg:x="70" fg:w="38"/><text x="0.2897%" y="383.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (38 samples, 0.02%)</title><rect x="0.0397%" y="357" width="0.0215%" height="15" fill="rgb(207,160,47)" fg:x="70" fg:w="38"/><text x="0.2897%" y="367.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (38 samples, 0.02%)</title><rect x="0.0397%" y="341" width="0.0215%" height="15" fill="rgb(228,23,34)" fg:x="70" fg:w="38"/><text x="0.2897%" y="351.50"></text></g><g><title>smithay_clipboard::worker::worker_impl (38 samples, 0.02%)</title><rect x="0.0397%" y="325" width="0.0215%" height="15" fill="rgb(218,30,26)" fg:x="70" fg:w="38"/><text x="0.2897%" y="335.50"></text></g><g><title>smithay-clipboa (49 samples, 0.03%)</title><rect x="0.0368%" y="453" width="0.0278%" height="15" fill="rgb(220,122,19)" fg:x="65" fg:w="49"/><text x="0.2868%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.01%)</title><rect x="0.1008%" y="421" width="0.0130%" height="15" fill="rgb(250,228,42)" fg:x="178" fg:w="23"/><text x="0.3508%" y="431.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (41 samples, 0.02%)</title><rect x="0.1303%" y="421" width="0.0232%" height="15" fill="rgb(240,193,28)" fg:x="230" fg:w="41"/><text x="0.3803%" y="431.50"></text></g><g><title>&lt;eframe::native::run::glow_integration::GlowWinitApp as eframe::native::run::WinitApp&gt;::run_ui_and_paint (69 samples, 0.04%)</title><rect x="0.1722%" y="421" width="0.0391%" height="15" fill="rgb(216,20,37)" fg:x="304" fg:w="69"/><text x="0.4222%" y="431.50"></text></g><g><title>&lt;glutin::surface::Surface&lt;T&gt; as glutin::surface::GlSurface&lt;T&gt;&gt;::swap_buffers (40 samples, 0.02%)</title><rect x="0.2187%" y="421" width="0.0227%" height="15" fill="rgb(206,188,39)" fg:x="386" fg:w="40"/><text x="0.4687%" y="431.50"></text></g><g><title>&lt;sortingvisualizer::app::MyApp as eframe::epi::App&gt;::update::convert_array (427 samples, 0.24%)</title><rect x="0.2509%" y="421" width="0.2419%" height="15" fill="rgb(217,207,13)" fg:x="443" fg:w="427"/><text x="0.5009%" y="431.50"></text></g><g><title>[iris_dri.so] (809 samples, 0.46%)</title><rect x="0.5115%" y="421" width="0.4583%" height="15" fill="rgb(231,73,38)" fg:x="903" fg:w="809"/><text x="0.7615%" y="431.50"></text></g><g><title>[libEGL_mesa.so.0.0.0] (108 samples, 0.06%)</title><rect x="0.9726%" y="421" width="0.0612%" height="15" fill="rgb(225,20,46)" fg:x="1717" fg:w="108"/><text x="1.2226%" y="431.50"></text></g><g><title>[libc.so.6] (119 samples, 0.07%)</title><rect x="1.0338%" y="421" width="0.0674%" height="15" fill="rgb(210,31,41)" fg:x="1825" fg:w="119"/><text x="1.2838%" y="431.50"></text></g><g><title>[libffi.so.8.1.2] (18 samples, 0.01%)</title><rect x="1.1018%" y="421" width="0.0102%" height="15" fill="rgb(221,200,47)" fg:x="1945" fg:w="18"/><text x="1.3518%" y="431.50"></text></g><g><title>[libwayland-client.so.0.22.0] (120 samples, 0.07%)</title><rect x="1.1142%" y="421" width="0.0680%" height="15" fill="rgb(226,26,5)" fg:x="1967" fg:w="120"/><text x="1.3642%" y="431.50"></text></g><g><title>[sortingvisualizer] (23 samples, 0.01%)</title><rect x="1.1828%" y="421" width="0.0130%" height="15" fill="rgb(249,33,26)" fg:x="2088" fg:w="23"/><text x="1.4328%" y="431.50"></text></g><g><title>[iris_dri.so] (23 samples, 0.01%)</title><rect x="1.1828%" y="405" width="0.0130%" height="15" fill="rgb(235,183,28)" fg:x="2088" fg:w="23"/><text x="1.4328%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (36 samples, 0.02%)</title><rect x="1.2270%" y="421" width="0.0204%" height="15" fill="rgb(221,5,38)" fg:x="2166" fg:w="36"/><text x="1.4770%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (34 samples, 0.02%)</title><rect x="1.2474%" y="421" width="0.0193%" height="15" fill="rgb(247,18,42)" fg:x="2202" fg:w="34"/><text x="1.4974%" y="431.50"></text></g><g><title>cfree (41 samples, 0.02%)</title><rect x="1.2728%" y="421" width="0.0232%" height="15" fill="rgb(241,131,45)" fg:x="2247" fg:w="41"/><text x="1.5228%" y="431.50"></text></g><g><title>ecolor::color32::Color32::from_rgba_unmultiplied (32 samples, 0.02%)</title><rect x="1.3012%" y="421" width="0.0181%" height="15" fill="rgb(249,31,29)" fg:x="2297" fg:w="32"/><text x="1.5512%" y="431.50"></text></g><g><title>eframe::native::epi_integration::read_window_info (18 samples, 0.01%)</title><rect x="1.3193%" y="421" width="0.0102%" height="15" fill="rgb(225,111,53)" fg:x="2329" fg:w="18"/><text x="1.5693%" y="431.50"></text></g><g><title>eframe::native::run::run_and_return::{{closure}} (36 samples, 0.02%)</title><rect x="1.3329%" y="421" width="0.0204%" height="15" fill="rgb(238,160,17)" fg:x="2353" fg:w="36"/><text x="1.5829%" y="431.50"></text></g><g><title>epaint::stats::PaintStats::add (421 samples, 0.24%)</title><rect x="1.3782%" y="421" width="0.2385%" height="15" fill="rgb(214,148,48)" fg:x="2433" fg:w="421"/><text x="1.6282%" y="431.50"></text></g><g><title>epaint::stats::PaintStats::from_shapes (114 samples, 0.06%)</title><rect x="1.6167%" y="421" width="0.0646%" height="15" fill="rgb(232,36,49)" fg:x="2854" fg:w="114"/><text x="1.8667%" y="431.50"></text></g><g><title>epaint::tessellator::Path::fill (184 samples, 0.10%)</title><rect x="1.6824%" y="421" width="0.1042%" height="15" fill="rgb(209,103,24)" fg:x="2970" fg:w="184"/><text x="1.9324%" y="431.50"></text></g><g><title>epaint::tessellator::Tessellator::tessellate_clipped_shape (571 samples, 0.32%)</title><rect x="1.7866%" y="421" width="0.3235%" height="15" fill="rgb(229,88,8)" fg:x="3154" fg:w="571"/><text x="2.0366%" y="431.50"></text></g><g><title>epaint::tessellator::stroke_path (147 samples, 0.08%)</title><rect x="2.1146%" y="421" width="0.0833%" height="15" fill="rgb(213,181,19)" fg:x="3733" fg:w="147"/><text x="2.3646%" y="431.50"></text></g><g><title>epaint::text::font::Font::glyph_info (617 samples, 0.35%)</title><rect x="2.2018%" y="421" width="0.3495%" height="15" fill="rgb(254,191,54)" fg:x="3887" fg:w="617"/><text x="2.4518%" y="431.50"></text></g><g><title>epaint::text::fonts::Fonts::begin_frame (28 samples, 0.02%)</title><rect x="2.5513%" y="421" width="0.0159%" height="15" fill="rgb(241,83,37)" fg:x="4504" fg:w="28"/><text x="2.8013%" y="431.50"></text></g><g><title>malloc (24 samples, 0.01%)</title><rect x="2.6074%" y="421" width="0.0136%" height="15" fill="rgb(233,36,39)" fg:x="4603" fg:w="24"/><text x="2.8574%" y="431.50"></text></g><g><title>scoped_tls::ScopedKey&lt;T&gt;::set (42 samples, 0.02%)</title><rect x="2.6358%" y="421" width="0.0238%" height="15" fill="rgb(226,3,54)" fg:x="4653" fg:w="42"/><text x="2.8858%" y="431.50"></text></g><g><title>smithay_client_toolkit::surface::get_surface_outputs (31 samples, 0.02%)</title><rect x="2.6629%" y="421" width="0.0176%" height="15" fill="rgb(245,192,40)" fg:x="4701" fg:w="31"/><text x="2.9129%" y="431.50"></text></g><g><title>std::sync::mpsc::shared::Packet&lt;T&gt;::send (21 samples, 0.01%)</title><rect x="2.6811%" y="421" width="0.0119%" height="15" fill="rgb(238,167,29)" fg:x="4733" fg:w="21"/><text x="2.9311%" y="431.50"></text></g><g><title>wayland_client::event_queue::EventQueue::prepare_read (22 samples, 0.01%)</title><rect x="2.7066%" y="421" width="0.0125%" height="15" fill="rgb(232,182,51)" fg:x="4778" fg:w="22"/><text x="2.9566%" y="431.50"></text></g><g><title>wayland_client::imp::event_queue::DISPATCH_METADATA::FOO::__getit (26 samples, 0.01%)</title><rect x="2.7219%" y="421" width="0.0147%" height="15" fill="rgb(231,60,39)" fg:x="4805" fg:w="26"/><text x="2.9719%" y="431.50"></text></g><g><title>wayland_commons::user_data::UserData::get (59 samples, 0.03%)</title><rect x="2.7366%" y="421" width="0.0334%" height="15" fill="rgb(208,69,12)" fg:x="4831" fg:w="59"/><text x="2.9866%" y="431.50"></text></g><g><title>winit::platform_impl::platform::wayland::window::Window::current_monitor (25 samples, 0.01%)</title><rect x="2.7768%" y="421" width="0.0142%" height="15" fill="rgb(235,93,37)" fg:x="4902" fg:w="25"/><text x="3.0268%" y="431.50"></text></g><g><title>wl_display_dispatch_queue_pending (23 samples, 0.01%)</title><rect x="2.8012%" y="421" width="0.0130%" height="15" fill="rgb(213,116,39)" fg:x="4945" fg:w="23"/><text x="3.0512%" y="431.50"></text></g><g><title>wl_display_prepare_read_queue (22 samples, 0.01%)</title><rect x="2.8204%" y="421" width="0.0125%" height="15" fill="rgb(222,207,29)" fg:x="4979" fg:w="22"/><text x="3.0704%" y="431.50"></text></g><g><title>wl_display_read_events (26 samples, 0.01%)</title><rect x="2.8329%" y="421" width="0.0147%" height="15" fill="rgb(206,96,30)" fg:x="5001" fg:w="26"/><text x="3.0829%" y="431.50"></text></g><g><title>[[heap]] (4,871 samples, 2.76%)</title><rect x="0.1008%" y="437" width="2.7592%" height="15" fill="rgb(218,138,4)" fg:x="178" fg:w="4871"/><text x="0.3508%" y="447.50">[[..</text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.01%)</title><rect x="2.8606%" y="421" width="0.0108%" height="15" fill="rgb(250,191,14)" fg:x="5050" fg:w="19"/><text x="3.1106%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (48 samples, 0.03%)</title><rect x="2.8788%" y="421" width="0.0272%" height="15" fill="rgb(239,60,40)" fg:x="5082" fg:w="48"/><text x="3.1288%" y="431.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (36 samples, 0.02%)</title><rect x="2.9099%" y="421" width="0.0204%" height="15" fill="rgb(206,27,48)" fg:x="5137" fg:w="36"/><text x="3.1599%" y="431.50"></text></g><g><title>&lt;calloop::sources::ping::eventfd::PingSource as calloop::sources::EventSource&gt;::process_events (20 samples, 0.01%)</title><rect x="2.9382%" y="421" width="0.0113%" height="15" fill="rgb(225,35,8)" fg:x="5187" fg:w="20"/><text x="3.1882%" y="431.50"></text></g><g><title>&lt;core::cell::RefCell&lt;calloop::sources::DispatcherInner&lt;S,F&gt;&gt; as calloop::sources::EventDispatcher&lt;Data&gt;&gt;::process_events (22 samples, 0.01%)</title><rect x="2.9547%" y="421" width="0.0125%" height="15" fill="rgb(250,213,24)" fg:x="5216" fg:w="22"/><text x="3.2047%" y="431.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (22 samples, 0.01%)</title><rect x="2.9892%" y="421" width="0.0125%" height="15" fill="rgb(247,123,22)" fg:x="5277" fg:w="22"/><text x="3.2392%" y="431.50"></text></g><g><title>[iris_dri.so] (163 samples, 0.09%)</title><rect x="3.0085%" y="421" width="0.0923%" height="15" fill="rgb(231,138,38)" fg:x="5311" fg:w="163"/><text x="3.2585%" y="431.50"></text></g><g><title>[libEGL.so.1.1.0] (47 samples, 0.03%)</title><rect x="3.1008%" y="421" width="0.0266%" height="15" fill="rgb(231,145,46)" fg:x="5474" fg:w="47"/><text x="3.3508%" y="431.50"></text></g><g><title>[libc.so.6] (86 samples, 0.05%)</title><rect x="3.1371%" y="421" width="0.0487%" height="15" fill="rgb(251,118,11)" fg:x="5538" fg:w="86"/><text x="3.3871%" y="431.50"></text></g><g><title>[libffi.so.8.1.2] (79 samples, 0.04%)</title><rect x="3.1858%" y="421" width="0.0448%" height="15" fill="rgb(217,147,25)" fg:x="5624" fg:w="79"/><text x="3.4358%" y="431.50"></text></g><g><title>[libwayland-client.so.0.22.0] (25 samples, 0.01%)</title><rect x="3.2305%" y="421" width="0.0142%" height="15" fill="rgb(247,81,37)" fg:x="5703" fg:w="25"/><text x="3.4805%" y="431.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (380 samples, 0.22%)</title><rect x="3.2878%" y="421" width="0.2153%" height="15" fill="rgb(209,12,38)" fg:x="5804" fg:w="380"/><text x="3.5378%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;egui::input_state::InputState&gt; (29 samples, 0.02%)</title><rect x="3.5234%" y="421" width="0.0164%" height="15" fill="rgb(227,1,9)" fg:x="6220" fg:w="29"/><text x="3.7734%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;egui::input_state::PointerState&gt; (25 samples, 0.01%)</title><rect x="3.5398%" y="421" width="0.0142%" height="15" fill="rgb(248,47,43)" fg:x="6249" fg:w="25"/><text x="3.7898%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;egui::ui::Ui&gt; (36 samples, 0.02%)</title><rect x="3.5597%" y="421" width="0.0204%" height="15" fill="rgb(221,10,30)" fg:x="6284" fg:w="36"/><text x="3.8097%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;epaint::shape::Shape&gt; (159 samples, 0.09%)</title><rect x="3.5800%" y="421" width="0.0901%" height="15" fill="rgb(210,229,1)" fg:x="6320" fg:w="159"/><text x="3.8300%" y="431.50"></text></g><g><title>eframe::native::epi_integration::EpiIntegration::update (63 samples, 0.04%)</title><rect x="3.6865%" y="421" width="0.0357%" height="15" fill="rgb(222,148,37)" fg:x="6508" fg:w="63"/><text x="3.9365%" y="431.50"></text></g><g><title>egui::containers::frame::Prepared::end (47 samples, 0.03%)</title><rect x="3.7285%" y="421" width="0.0266%" height="15" fill="rgb(234,67,33)" fg:x="6582" fg:w="47"/><text x="3.9785%" y="431.50"></text></g><g><title>egui::containers::panel::CentralPanel::show (43 samples, 0.02%)</title><rect x="3.7551%" y="421" width="0.0244%" height="15" fill="rgb(247,98,35)" fg:x="6629" fg:w="43"/><text x="4.0051%" y="431.50"></text></g><g><title>egui::context::Context::begin_frame (71 samples, 0.04%)</title><rect x="3.7840%" y="421" width="0.0402%" height="15" fill="rgb(247,138,52)" fg:x="6680" fg:w="71"/><text x="4.0340%" y="431.50"></text></g><g><title>egui::context::Context::end_frame (25 samples, 0.01%)</title><rect x="3.8242%" y="421" width="0.0142%" height="15" fill="rgb(213,79,30)" fg:x="6751" fg:w="25"/><text x="4.0742%" y="431.50"></text></g><g><title>egui::context::Context::interact (35 samples, 0.02%)</title><rect x="3.8457%" y="421" width="0.0198%" height="15" fill="rgb(246,177,23)" fg:x="6789" fg:w="35"/><text x="4.0957%" y="431.50"></text></g><g><title>egui::context::Context::layer_id_at (25 samples, 0.01%)</title><rect x="3.8655%" y="421" width="0.0142%" height="15" fill="rgb(230,62,27)" fg:x="6824" fg:w="25"/><text x="4.1155%" y="431.50"></text></g><g><title>egui::context::Context::request_repaint (19 samples, 0.01%)</title><rect x="3.8797%" y="421" width="0.0108%" height="15" fill="rgb(216,154,8)" fg:x="6849" fg:w="19"/><text x="4.1297%" y="431.50"></text></g><g><title>egui::context::Context::tessellate (26 samples, 0.01%)</title><rect x="3.8910%" y="421" width="0.0147%" height="15" fill="rgb(244,35,45)" fg:x="6869" fg:w="26"/><text x="4.1410%" y="431.50"></text></g><g><title>egui::context::Context::write (32 samples, 0.02%)</title><rect x="3.9058%" y="421" width="0.0181%" height="15" fill="rgb(251,115,12)" fg:x="6895" fg:w="32"/><text x="4.1558%" y="431.50"></text></g><g><title>egui::data::output::FullOutput::append (26 samples, 0.01%)</title><rect x="3.9239%" y="421" width="0.0147%" height="15" fill="rgb(240,54,50)" fg:x="6927" fg:w="26"/><text x="4.1739%" y="431.50"></text></g><g><title>egui::id::Id::new (22 samples, 0.01%)</title><rect x="3.9386%" y="421" width="0.0125%" height="15" fill="rgb(233,84,52)" fg:x="6953" fg:w="22"/><text x="4.1886%" y="431.50"></text></g><g><title>egui::painter::Painter::extend (29 samples, 0.02%)</title><rect x="3.9805%" y="421" width="0.0164%" height="15" fill="rgb(207,117,47)" fg:x="7027" fg:w="29"/><text x="4.2305%" y="431.50"></text></g><g><title>egui_glow::painter::Painter::paint_primitives (18 samples, 0.01%)</title><rect x="4.0157%" y="421" width="0.0102%" height="15" fill="rgb(249,43,39)" fg:x="7089" fg:w="18"/><text x="4.2657%" y="431.50"></text></g><g><title>egui_glow::painter::Painter::prepare_painting (44 samples, 0.02%)</title><rect x="4.0259%" y="421" width="0.0249%" height="15" fill="rgb(209,38,44)" fg:x="7107" fg:w="44"/><text x="4.2759%" y="431.50"></text></g><g><title>egui_winit::State::take_egui_input (22 samples, 0.01%)</title><rect x="4.0536%" y="421" width="0.0125%" height="15" fill="rgb(236,212,23)" fg:x="7156" fg:w="22"/><text x="4.3036%" y="431.50"></text></g><g><title>emath::history::History&lt;T&gt;::add (31 samples, 0.02%)</title><rect x="4.0661%" y="421" width="0.0176%" height="15" fill="rgb(242,79,21)" fg:x="7178" fg:w="31"/><text x="4.3161%" y="431.50"></text></g><g><title>epaint::stats::PaintStats::add (179 samples, 0.10%)</title><rect x="4.0836%" y="421" width="0.1014%" height="15" fill="rgb(211,96,35)" fg:x="7209" fg:w="179"/><text x="4.3336%" y="431.50"></text></g><g><title>epaint::tessellator::Path::add_line_loop (1,811 samples, 1.03%)</title><rect x="4.1935%" y="421" width="1.0259%" height="15" fill="rgb(253,215,40)" fg:x="7403" fg:w="1811"/><text x="4.4435%" y="431.50"></text></g><g><title>epaint::tessellator::Path::fill (220 samples, 0.12%)</title><rect x="5.2194%" y="421" width="0.1246%" height="15" fill="rgb(211,81,21)" fg:x="9214" fg:w="220"/><text x="5.4694%" y="431.50"></text></g><g><title>epaint::tessellator::Tessellator::tessellate_clipped_shape (639 samples, 0.36%)</title><rect x="5.3440%" y="421" width="0.3620%" height="15" fill="rgb(208,190,38)" fg:x="9434" fg:w="639"/><text x="5.5940%" y="431.50"></text></g><g><title>epaint::tessellator::Tessellator::tessellate_rect (1,021 samples, 0.58%)</title><rect x="5.7060%" y="421" width="0.5784%" height="15" fill="rgb(235,213,38)" fg:x="10073" fg:w="1021"/><text x="5.9560%" y="431.50"></text></g><g><title>epaint::tessellator::Tessellator::tessellate_shape (611 samples, 0.35%)</title><rect x="6.2843%" y="421" width="0.3461%" height="15" fill="rgb(237,122,38)" fg:x="11094" fg:w="611"/><text x="6.5343%" y="431.50"></text></g><g><title>epaint::tessellator::stroke_path (195 samples, 0.11%)</title><rect x="6.6305%" y="421" width="0.1105%" height="15" fill="rgb(244,218,35)" fg:x="11705" fg:w="195"/><text x="6.8805%" y="431.50"></text></g><g><title>epaint::tessellator::tessellate_shapes (386 samples, 0.22%)</title><rect x="6.7409%" y="421" width="0.2187%" height="15" fill="rgb(240,68,47)" fg:x="11900" fg:w="386"/><text x="6.9909%" y="431.50"></text></g><g><title>epaint::text::font::Font::preload_common_characters (164 samples, 0.09%)</title><rect x="6.9596%" y="421" width="0.0929%" height="15" fill="rgb(210,16,53)" fg:x="12286" fg:w="164"/><text x="7.2096%" y="431.50"></text></g><g><title>glutin::api::egl::context::ContextInner::bind_api (39 samples, 0.02%)</title><rect x="7.0666%" y="421" width="0.0221%" height="15" fill="rgb(235,124,12)" fg:x="12475" fg:w="39"/><text x="7.3166%" y="431.50"></text></g><g><title>nix::unistd::read (35 samples, 0.02%)</title><rect x="7.0995%" y="421" width="0.0198%" height="15" fill="rgb(224,169,11)" fg:x="12533" fg:w="35"/><text x="7.3495%" y="431.50"></text></g><g><title>std::time::Instant::elapsed (21 samples, 0.01%)</title><rect x="7.1544%" y="421" width="0.0119%" height="15" fill="rgb(250,166,2)" fg:x="12630" fg:w="21"/><text x="7.4044%" y="431.50"></text></g><g><title>std::time::Instant::now (54 samples, 0.03%)</title><rect x="7.1663%" y="421" width="0.0306%" height="15" fill="rgb(242,216,29)" fg:x="12651" fg:w="54"/><text x="7.4163%" y="431.50"></text></g><g><title>wl_proxy_marshal_array_flags (67 samples, 0.04%)</title><rect x="7.2179%" y="421" width="0.0380%" height="15" fill="rgb(230,116,27)" fg:x="12742" fg:w="67"/><text x="7.4679%" y="431.50"></text></g><g><title>[[stack]] (7,762 samples, 4.40%)</title><rect x="2.8601%" y="437" width="4.3969%" height="15" fill="rgb(228,99,48)" fg:x="5049" fg:w="7762"/><text x="3.1101%" y="447.50">[[sta..</text></g><g><title>[iris_dri.so] (20 samples, 0.01%)</title><rect x="7.3164%" y="421" width="0.0113%" height="15" fill="rgb(253,11,6)" fg:x="12916" fg:w="20"/><text x="7.5664%" y="431.50"></text></g><g><title>[iris_dri.so] (117 samples, 0.07%)</title><rect x="7.2683%" y="437" width="0.0663%" height="15" fill="rgb(247,143,39)" fg:x="12831" fg:w="117"/><text x="7.5183%" y="447.50"></text></g><g><title>[libGLdispatch.so.0.0.0] (481 samples, 0.27%)</title><rect x="7.3436%" y="437" width="0.2725%" height="15" fill="rgb(236,97,10)" fg:x="12964" fg:w="481"/><text x="7.5936%" y="447.50"></text></g><g><title>[libc.so.6] (21 samples, 0.01%)</title><rect x="7.6172%" y="437" width="0.0119%" height="15" fill="rgb(233,208,19)" fg:x="13447" fg:w="21"/><text x="7.8672%" y="447.50"></text></g><g><title>[libffi.so.8.1.2] (18 samples, 0.01%)</title><rect x="7.6291%" y="437" width="0.0102%" height="15" fill="rgb(216,164,2)" fg:x="13468" fg:w="18"/><text x="7.8791%" y="447.50"></text></g><g><title>[libglapi.so.0.0.0] (299 samples, 0.17%)</title><rect x="7.6393%" y="437" width="0.1694%" height="15" fill="rgb(220,129,5)" fg:x="13486" fg:w="299"/><text x="7.8893%" y="447.50"></text></g><g><title>&lt;calloop::sources::generic::Generic&lt;F,E&gt; as calloop::sources::EventSource&gt;::process_events (55 samples, 0.03%)</title><rect x="7.8223%" y="421" width="0.0312%" height="15" fill="rgb(242,17,10)" fg:x="13809" fg:w="55"/><text x="8.0723%" y="431.50"></text></g><g><title>[iris_dri.so] (18 samples, 0.01%)</title><rect x="7.8580%" y="421" width="0.0102%" height="15" fill="rgb(242,107,0)" fg:x="13872" fg:w="18"/><text x="8.1080%" y="431.50"></text></g><g><title>egui_glow::painter::clear (21 samples, 0.01%)</title><rect x="7.8801%" y="421" width="0.0119%" height="15" fill="rgb(251,28,31)" fg:x="13911" fg:w="21"/><text x="8.1301%" y="431.50"></text></g><g><title>[sortingvisualizer] (143 samples, 0.08%)</title><rect x="7.8144%" y="437" width="0.0810%" height="15" fill="rgb(233,223,10)" fg:x="13795" fg:w="143"/><text x="8.0644%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (74 samples, 0.04%)</title><rect x="7.9429%" y="421" width="0.0419%" height="15" fill="rgb(215,21,27)" fg:x="14022" fg:w="74"/><text x="8.1929%" y="431.50"></text></g><g><title>&lt;core::cell::RefCell&lt;calloop::sources::DispatcherInner&lt;S,F&gt;&gt; as calloop::sources::EventDispatcher&lt;Data&gt;&gt;::post_run (28 samples, 0.02%)</title><rect x="7.9973%" y="421" width="0.0159%" height="15" fill="rgb(232,23,21)" fg:x="14118" fg:w="28"/><text x="8.2473%" y="431.50"></text></g><g><title>glutin::api::egl::display::Display::initialize_display (18 samples, 0.01%)</title><rect x="8.0415%" y="357" width="0.0102%" height="15" fill="rgb(244,5,23)" fg:x="14196" fg:w="18"/><text x="8.2915%" y="367.50"></text></g><g><title>[libEGL_mesa.so.0.0.0] (18 samples, 0.01%)</title><rect x="8.0415%" y="341" width="0.0102%" height="15" fill="rgb(226,81,46)" fg:x="14196" fg:w="18"/><text x="8.2915%" y="351.50"></text></g><g><title>[libEGL_mesa.so.0.0.0] (18 samples, 0.01%)</title><rect x="8.0415%" y="325" width="0.0102%" height="15" fill="rgb(247,70,30)" fg:x="14196" fg:w="18"/><text x="8.2915%" y="335.50"></text></g><g><title>[libEGL_mesa.so.0.0.0] (18 samples, 0.01%)</title><rect x="8.0415%" y="309" width="0.0102%" height="15" fill="rgb(212,68,19)" fg:x="14196" fg:w="18"/><text x="8.2915%" y="319.50"></text></g><g><title>glutin::display::Display::new (20 samples, 0.01%)</title><rect x="8.0415%" y="389" width="0.0113%" height="15" fill="rgb(240,187,13)" fg:x="14196" fg:w="20"/><text x="8.2915%" y="399.50"></text></g><g><title>glutin::api::egl::display::Display::new (20 samples, 0.01%)</title><rect x="8.0415%" y="373" width="0.0113%" height="15" fill="rgb(223,113,26)" fg:x="14196" fg:w="20"/><text x="8.2915%" y="383.50"></text></g><g><title>&lt;eframe::native::run::glow_integration::GlowWinitApp as eframe::native::run::WinitApp&gt;::on_event (66 samples, 0.04%)</title><rect x="8.0172%" y="421" width="0.0374%" height="15" fill="rgb(206,192,2)" fg:x="14153" fg:w="66"/><text x="8.2672%" y="431.50"></text></g><g><title>glutin_winit::DisplayBuilder::build (23 samples, 0.01%)</title><rect x="8.0415%" y="405" width="0.0130%" height="15" fill="rgb(241,108,4)" fg:x="14196" fg:w="23"/><text x="8.2915%" y="415.50"></text></g><g><title>&lt;eframe::native::run::glow_integration::GlowWinitApp as eframe::native::run::WinitApp&gt;::run_ui_and_paint (406 samples, 0.23%)</title><rect x="8.0545%" y="421" width="0.2300%" height="15" fill="rgb(247,173,49)" fg:x="14219" fg:w="406"/><text x="8.3045%" y="431.50"></text></g><g><title>&lt;glutin::surface::Surface&lt;T&gt; as glutin::surface::GlSurface&lt;T&gt;&gt;::swap_buffers (406 samples, 0.23%)</title><rect x="8.0545%" y="405" width="0.2300%" height="15" fill="rgb(224,114,35)" fg:x="14219" fg:w="406"/><text x="8.3045%" y="415.50"></text></g><g><title>[libEGL_mesa.so.0.0.0] (406 samples, 0.23%)</title><rect x="8.0545%" y="389" width="0.2300%" height="15" fill="rgb(245,159,27)" fg:x="14219" fg:w="406"/><text x="8.3045%" y="399.50"></text></g><g><title>[libEGL_mesa.so.0.0.0] (406 samples, 0.23%)</title><rect x="8.0545%" y="373" width="0.2300%" height="15" fill="rgb(245,172,44)" fg:x="14219" fg:w="406"/><text x="8.3045%" y="383.50"></text></g><g><title>[libEGL_mesa.so.0.0.0] (406 samples, 0.23%)</title><rect x="8.0545%" y="357" width="0.2300%" height="15" fill="rgb(236,23,11)" fg:x="14219" fg:w="406"/><text x="8.3045%" y="367.50"></text></g><g><title>[iris_dri.so] (406 samples, 0.23%)</title><rect x="8.0545%" y="341" width="0.2300%" height="15" fill="rgb(205,117,38)" fg:x="14219" fg:w="406"/><text x="8.3045%" y="351.50"></text></g><g><title>[iris_dri.so] (406 samples, 0.23%)</title><rect x="8.0545%" y="325" width="0.2300%" height="15" fill="rgb(237,72,25)" fg:x="14219" fg:w="406"/><text x="8.3045%" y="335.50"></text></g><g><title>[iris_dri.so] (406 samples, 0.23%)</title><rect x="8.0545%" y="309" width="0.2300%" height="15" fill="rgb(244,70,9)" fg:x="14219" fg:w="406"/><text x="8.3045%" y="319.50"></text></g><g><title>[iris_dri.so] (406 samples, 0.23%)</title><rect x="8.0545%" y="293" width="0.2300%" height="15" fill="rgb(217,125,39)" fg:x="14219" fg:w="406"/><text x="8.3045%" y="303.50"></text></g><g><title>[iris_dri.so] (406 samples, 0.23%)</title><rect x="8.0545%" y="277" width="0.2300%" height="15" fill="rgb(235,36,10)" fg:x="14219" fg:w="406"/><text x="8.3045%" y="287.50"></text></g><g><title>[iris_dri.so] (406 samples, 0.23%)</title><rect x="8.0545%" y="261" width="0.2300%" height="15" fill="rgb(251,123,47)" fg:x="14219" fg:w="406"/><text x="8.3045%" y="271.50"></text></g><g><title>[iris_dri.so] (406 samples, 0.23%)</title><rect x="8.0545%" y="245" width="0.2300%" height="15" fill="rgb(221,13,13)" fg:x="14219" fg:w="406"/><text x="8.3045%" y="255.50"></text></g><g><title>[iris_dri.so] (406 samples, 0.23%)</title><rect x="8.0545%" y="229" width="0.2300%" height="15" fill="rgb(238,131,9)" fg:x="14219" fg:w="406"/><text x="8.3045%" y="239.50"></text></g><g><title>[iris_dri.so] (144 samples, 0.08%)</title><rect x="8.2030%" y="213" width="0.0816%" height="15" fill="rgb(211,50,8)" fg:x="14481" fg:w="144"/><text x="8.4530%" y="223.50"></text></g><g><title>&lt;glow::native::Context as glow::HasContext&gt;::use_program (19 samples, 0.01%)</title><rect x="8.3310%" y="421" width="0.0108%" height="15" fill="rgb(245,182,24)" fg:x="14707" fg:w="19"/><text x="8.5810%" y="431.50"></text></g><g><title>&lt;u32 as winit::dpi::Pixel&gt;::from_f64 (37 samples, 0.02%)</title><rect x="8.3650%" y="421" width="0.0210%" height="15" fill="rgb(242,14,37)" fg:x="14767" fg:w="37"/><text x="8.6150%" y="431.50"></text></g><g><title>&lt;wayland_sys::client::WAYLAND_CLIENT_HANDLE as core::ops::deref::Deref&gt;::deref (19 samples, 0.01%)</title><rect x="8.3871%" y="421" width="0.0108%" height="15" fill="rgb(246,228,12)" fg:x="14806" fg:w="19"/><text x="8.6371%" y="431.50"></text></g><g><title>[iris_dri.so] (193 samples, 0.11%)</title><rect x="10.0190%" y="325" width="0.1093%" height="15" fill="rgb(213,55,15)" fg:x="17687" fg:w="193"/><text x="10.2690%" y="335.50"></text></g><g><title>[iris_dri.so] (53 samples, 0.03%)</title><rect x="10.0983%" y="309" width="0.0300%" height="15" fill="rgb(209,9,3)" fg:x="17827" fg:w="53"/><text x="10.3483%" y="319.50"></text></g><g><title>[libc.so.6] (24 samples, 0.01%)</title><rect x="10.1284%" y="325" width="0.0136%" height="15" fill="rgb(230,59,30)" fg:x="17880" fg:w="24"/><text x="10.3784%" y="335.50"></text></g><g><title>[iris_dri.so] (457 samples, 0.26%)</title><rect x="9.8933%" y="341" width="0.2589%" height="15" fill="rgb(209,121,21)" fg:x="17465" fg:w="457"/><text x="10.1433%" y="351.50"></text></g><g><title>__popcountdi2 (18 samples, 0.01%)</title><rect x="10.1420%" y="325" width="0.0102%" height="15" fill="rgb(220,109,13)" fg:x="17904" fg:w="18"/><text x="10.3920%" y="335.50"></text></g><g><title>[iris_dri.so] (1,273 samples, 0.72%)</title><rect x="9.4463%" y="357" width="0.7211%" height="15" fill="rgb(232,18,1)" fg:x="16676" fg:w="1273"/><text x="9.6963%" y="367.50"></text></g><g><title>__popcountdi2 (27 samples, 0.02%)</title><rect x="10.1522%" y="341" width="0.0153%" height="15" fill="rgb(215,41,42)" fg:x="17922" fg:w="27"/><text x="10.4022%" y="351.50"></text></g><g><title>[libc.so.6] (31 samples, 0.02%)</title><rect x="10.1674%" y="357" width="0.0176%" height="15" fill="rgb(224,123,36)" fg:x="17949" fg:w="31"/><text x="10.4174%" y="367.50"></text></g><g><title>[iris_dri.so] (2,185 samples, 1.24%)</title><rect x="8.9479%" y="373" width="1.2377%" height="15" fill="rgb(240,125,3)" fg:x="15796" fg:w="2185"/><text x="9.1979%" y="383.50"></text></g><g><title>[iris_dri.so] (2,187 samples, 1.24%)</title><rect x="8.9479%" y="405" width="1.2389%" height="15" fill="rgb(205,98,50)" fg:x="15796" fg:w="2187"/><text x="9.1979%" y="415.50"></text></g><g><title>[iris_dri.so] (2,187 samples, 1.24%)</title><rect x="8.9479%" y="389" width="1.2389%" height="15" fill="rgb(205,185,37)" fg:x="15796" fg:w="2187"/><text x="9.1979%" y="399.50"></text></g><g><title>[iris_dri.so] (3,144 samples, 1.78%)</title><rect x="8.4103%" y="421" width="1.7810%" height="15" fill="rgb(238,207,15)" fg:x="14847" fg:w="3144"/><text x="8.6603%" y="431.50">[..</text></g><g><title>[libEGL.so.1.1.0] (32 samples, 0.02%)</title><rect x="10.1918%" y="421" width="0.0181%" height="15" fill="rgb(213,199,42)" fg:x="17992" fg:w="32"/><text x="10.4418%" y="431.50"></text></g><g><title>[libEGL_mesa.so.0.0.0] (32 samples, 0.02%)</title><rect x="10.2099%" y="421" width="0.0181%" height="15" fill="rgb(235,201,11)" fg:x="18024" fg:w="32"/><text x="10.4599%" y="431.50"></text></g><g><title>[libGLdispatch.so.0.0.0] (54 samples, 0.03%)</title><rect x="10.2281%" y="421" width="0.0306%" height="15" fill="rgb(207,46,11)" fg:x="18056" fg:w="54"/><text x="10.4781%" y="431.50"></text></g><g><title>[libc.so.6] (221 samples, 0.13%)</title><rect x="10.2586%" y="421" width="0.1252%" height="15" fill="rgb(241,35,35)" fg:x="18110" fg:w="221"/><text x="10.5086%" y="431.50"></text></g><g><title>[libglapi.so.0.0.0] (23 samples, 0.01%)</title><rect x="10.3923%" y="421" width="0.0130%" height="15" fill="rgb(243,32,47)" fg:x="18346" fg:w="23"/><text x="10.6423%" y="431.50"></text></g><g><title>[libwayland-client.so.0.22.0] (97 samples, 0.05%)</title><rect x="10.4088%" y="421" width="0.0549%" height="15" fill="rgb(247,202,23)" fg:x="18375" fg:w="97"/><text x="10.6588%" y="431.50"></text></g><g><title>[sortingvisualizer] (28 samples, 0.02%)</title><rect x="10.4643%" y="421" width="0.0159%" height="15" fill="rgb(219,102,11)" fg:x="18473" fg:w="28"/><text x="10.7143%" y="431.50"></text></g><g><title>__libc_calloc (27 samples, 0.02%)</title><rect x="10.4852%" y="421" width="0.0153%" height="15" fill="rgb(243,110,44)" fg:x="18510" fg:w="27"/><text x="10.7352%" y="431.50"></text></g><g><title>__rdl_alloc (44 samples, 0.02%)</title><rect x="10.5005%" y="421" width="0.0249%" height="15" fill="rgb(222,74,54)" fg:x="18537" fg:w="44"/><text x="10.7505%" y="431.50"></text></g><g><title>__rdl_realloc (26 samples, 0.01%)</title><rect x="10.5255%" y="421" width="0.0147%" height="15" fill="rgb(216,99,12)" fg:x="18581" fg:w="26"/><text x="10.7755%" y="431.50"></text></g><g><title>__rust_probestack (49 samples, 0.03%)</title><rect x="10.5402%" y="421" width="0.0278%" height="15" fill="rgb(226,22,26)" fg:x="18607" fg:w="49"/><text x="10.7902%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (68 samples, 0.04%)</title><rect x="10.5821%" y="421" width="0.0385%" height="15" fill="rgb(217,163,10)" fg:x="18681" fg:w="68"/><text x="10.8321%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (20 samples, 0.01%)</title><rect x="10.6206%" y="421" width="0.0113%" height="15" fill="rgb(213,25,53)" fg:x="18749" fg:w="20"/><text x="10.8706%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (40 samples, 0.02%)</title><rect x="10.6319%" y="421" width="0.0227%" height="15" fill="rgb(252,105,26)" fg:x="18769" fg:w="40"/><text x="10.8819%" y="431.50"></text></g><g><title>alloc::slice::insert_head (53 samples, 0.03%)</title><rect x="10.6546%" y="421" width="0.0300%" height="15" fill="rgb(220,39,43)" fg:x="18809" fg:w="53"/><text x="10.9046%" y="431.50"></text></g><g><title>alloc::slice::merge_sort (29 samples, 0.02%)</title><rect x="10.6846%" y="421" width="0.0164%" height="15" fill="rgb(229,68,48)" fg:x="18862" fg:w="29"/><text x="10.9346%" y="431.50"></text></g><g><title>calloop::loop_logic::EventLoop&lt;Data&gt;::dispatch (35 samples, 0.02%)</title><rect x="10.7011%" y="421" width="0.0198%" height="15" fill="rgb(252,8,32)" fg:x="18891" fg:w="35"/><text x="10.9511%" y="431.50"></text></g><g><title>cfree (18 samples, 0.01%)</title><rect x="10.7294%" y="421" width="0.0102%" height="15" fill="rgb(223,20,43)" fg:x="18941" fg:w="18"/><text x="10.9794%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;egui::data::input::RawInput&gt; (30 samples, 0.02%)</title><rect x="10.7617%" y="421" width="0.0170%" height="15" fill="rgb(229,81,49)" fg:x="18998" fg:w="30"/><text x="11.0117%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;epaint::shape::Shape&gt; (950 samples, 0.54%)</title><rect x="10.7843%" y="421" width="0.5381%" height="15" fill="rgb(236,28,36)" fg:x="19038" fg:w="950"/><text x="11.0343%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (70 samples, 0.04%)</title><rect x="11.4839%" y="357" width="0.0397%" height="15" fill="rgb(249,185,26)" fg:x="20273" fg:w="70"/><text x="11.7339%" y="367.50"></text></g><g><title>malloc (28 samples, 0.02%)</title><rect x="11.7303%" y="325" width="0.0159%" height="15" fill="rgb(249,174,33)" fg:x="20708" fg:w="28"/><text x="11.9803%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (153 samples, 0.09%)</title><rect x="11.6606%" y="341" width="0.0867%" height="15" fill="rgb(233,201,37)" fg:x="20585" fg:w="153"/><text x="11.9106%" y="351.50"></text></g><g><title>&lt;wayland_client::event_queue::ReadEventsGuard as core::ops::drop::Drop&gt;::drop (19 samples, 0.01%)</title><rect x="11.7683%" y="325" width="0.0108%" height="15" fill="rgb(221,78,26)" fg:x="20775" fg:w="19"/><text x="12.0183%" y="335.50"></text></g><g><title>&lt;core::cell::RefCell&lt;calloop::sources::DispatcherInner&lt;S,F&gt;&gt; as calloop::sources::EventDispatcher&lt;Data&gt;&gt;::post_run (59 samples, 0.03%)</title><rect x="11.7615%" y="341" width="0.0334%" height="15" fill="rgb(250,127,30)" fg:x="20763" fg:w="59"/><text x="12.0115%" y="351.50"></text></g><g><title>wayland_client::display::Display::flush (22 samples, 0.01%)</title><rect x="11.8153%" y="325" width="0.0125%" height="15" fill="rgb(230,49,44)" fg:x="20858" fg:w="22"/><text x="12.0653%" y="335.50"></text></g><g><title>wl_display_flush (20 samples, 0.01%)</title><rect x="11.8164%" y="309" width="0.0113%" height="15" fill="rgb(229,67,23)" fg:x="20860" fg:w="20"/><text x="12.0664%" y="319.50"></text></g><g><title>&lt;core::cell::RefCell&lt;calloop::sources::DispatcherInner&lt;S,F&gt;&gt; as calloop::sources::EventDispatcher&lt;Data&gt;&gt;::pre_run (93 samples, 0.05%)</title><rect x="11.7949%" y="341" width="0.0527%" height="15" fill="rgb(249,83,47)" fg:x="20822" fg:w="93"/><text x="12.0449%" y="351.50"></text></g><g><title>wayland_client::event_queue::EventQueue::prepare_read (29 samples, 0.02%)</title><rect x="11.8311%" y="325" width="0.0164%" height="15" fill="rgb(215,43,3)" fg:x="20886" fg:w="29"/><text x="12.0811%" y="335.50"></text></g><g><title>wl_display_prepare_read_queue (23 samples, 0.01%)</title><rect x="11.8345%" y="309" width="0.0130%" height="15" fill="rgb(238,154,13)" fg:x="20892" fg:w="23"/><text x="12.0845%" y="319.50"></text></g><g><title>[libc.so.6] (22 samples, 0.01%)</title><rect x="11.9178%" y="261" width="0.0125%" height="15" fill="rgb(219,56,2)" fg:x="21039" fg:w="22"/><text x="12.1678%" y="271.50"></text></g><g><title>nix::unistd::read (47 samples, 0.03%)</title><rect x="11.9071%" y="293" width="0.0266%" height="15" fill="rgb(233,0,4)" fg:x="21020" fg:w="47"/><text x="12.1571%" y="303.50"></text></g><g><title>read (47 samples, 0.03%)</title><rect x="11.9071%" y="277" width="0.0266%" height="15" fill="rgb(235,30,7)" fg:x="21020" fg:w="47"/><text x="12.1571%" y="287.50"></text></g><g><title>&lt;calloop::sources::channel::Channel&lt;T&gt; as calloop::sources::EventSource&gt;::process_events (177 samples, 0.10%)</title><rect x="11.8612%" y="325" width="0.1003%" height="15" fill="rgb(250,79,13)" fg:x="20939" fg:w="177"/><text x="12.1112%" y="335.50"></text></g><g><title>&lt;calloop::sources::generic::Generic&lt;F,E&gt; as calloop::sources::EventSource&gt;::process_events (166 samples, 0.09%)</title><rect x="11.8674%" y="309" width="0.0940%" height="15" fill="rgb(211,146,34)" fg:x="20950" fg:w="166"/><text x="12.1174%" y="319.50"></text></g><g><title>std::sync::mpsc::Receiver&lt;T&gt;::try_recv (49 samples, 0.03%)</title><rect x="11.9337%" y="293" width="0.0278%" height="15" fill="rgb(228,22,38)" fg:x="21067" fg:w="49"/><text x="12.1837%" y="303.50"></text></g><g><title>std::sync::mpsc::shared::Packet&lt;T&gt;::try_recv (25 samples, 0.01%)</title><rect x="11.9473%" y="277" width="0.0142%" height="15" fill="rgb(235,168,5)" fg:x="21091" fg:w="25"/><text x="12.1973%" y="287.50"></text></g><g><title>&lt;core::cell::RefCell&lt;calloop::sources::DispatcherInner&lt;S,F&gt;&gt; as calloop::sources::EventDispatcher&lt;Data&gt;&gt;::process_events (228 samples, 0.13%)</title><rect x="11.8476%" y="341" width="0.1292%" height="15" fill="rgb(221,155,16)" fg:x="20915" fg:w="228"/><text x="12.0976%" y="351.50"></text></g><g><title>calloop::sys::Poll::poll (62 samples, 0.04%)</title><rect x="11.9790%" y="341" width="0.0351%" height="15" fill="rgb(215,215,53)" fg:x="21147" fg:w="62"/><text x="12.2290%" y="351.50"></text></g><g><title>std::time::Instant::now (38 samples, 0.02%)</title><rect x="11.9926%" y="325" width="0.0215%" height="15" fill="rgb(223,4,10)" fg:x="21171" fg:w="38"/><text x="12.2426%" y="335.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (38 samples, 0.02%)</title><rect x="11.9926%" y="309" width="0.0215%" height="15" fill="rgb(234,103,6)" fg:x="21171" fg:w="38"/><text x="12.2426%" y="319.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (38 samples, 0.02%)</title><rect x="11.9926%" y="293" width="0.0215%" height="15" fill="rgb(227,97,0)" fg:x="21171" fg:w="38"/><text x="12.2426%" y="303.50"></text></g><g><title>clock_gettime (35 samples, 0.02%)</title><rect x="11.9943%" y="277" width="0.0198%" height="15" fill="rgb(234,150,53)" fg:x="21174" fg:w="35"/><text x="12.2443%" y="287.50"></text></g><g><title>__vdso_clock_gettime (33 samples, 0.02%)</title><rect x="11.9954%" y="261" width="0.0187%" height="15" fill="rgb(228,201,54)" fg:x="21176" fg:w="33"/><text x="12.2454%" y="271.50"></text></g><g><title>[[vdso]] (19 samples, 0.01%)</title><rect x="12.0034%" y="245" width="0.0108%" height="15" fill="rgb(222,22,37)" fg:x="21190" fg:w="19"/><text x="12.2534%" y="255.50"></text></g><g><title>cfree (52 samples, 0.03%)</title><rect x="12.0141%" y="341" width="0.0295%" height="15" fill="rgb(237,53,32)" fg:x="21209" fg:w="52"/><text x="12.2641%" y="351.50"></text></g><g><title>[libc.so.6] (36 samples, 0.02%)</title><rect x="12.0232%" y="325" width="0.0204%" height="15" fill="rgb(233,25,53)" fg:x="21225" fg:w="36"/><text x="12.2732%" y="335.50"></text></g><g><title>calloop::loop_logic::EventLoop&lt;Data&gt;::dispatch (899 samples, 0.51%)</title><rect x="11.5428%" y="357" width="0.5093%" height="15" fill="rgb(210,40,34)" fg:x="20377" fg:w="899"/><text x="11.7928%" y="367.50"></text></g><g><title>&lt;u32 as winit::dpi::Pixel&gt;::from_f64 (30 samples, 0.02%)</title><rect x="12.2498%" y="325" width="0.0170%" height="15" fill="rgb(241,220,44)" fg:x="21625" fg:w="30"/><text x="12.4998%" y="335.50"></text></g><g><title>[iris_dri.so] (22 samples, 0.01%)</title><rect x="12.2668%" y="325" width="0.0125%" height="15" fill="rgb(235,28,35)" fg:x="21655" fg:w="22"/><text x="12.5168%" y="335.50"></text></g><g><title>&lt;eframe::native::run::glow_integration::GlowWinitApp as eframe::native::run::WinitApp&gt;::run_ui_and_paint (215 samples, 0.12%)</title><rect x="12.1733%" y="341" width="0.1218%" height="15" fill="rgb(210,56,17)" fg:x="21490" fg:w="215"/><text x="12.4233%" y="351.50"></text></g><g><title>egui::context::Context::frame_nr (26 samples, 0.01%)</title><rect x="12.3002%" y="341" width="0.0147%" height="15" fill="rgb(224,130,29)" fg:x="21714" fg:w="26"/><text x="12.5502%" y="351.50"></text></g><g><title>std::time::Instant::duration_since (27 samples, 0.02%)</title><rect x="12.3149%" y="341" width="0.0153%" height="15" fill="rgb(235,212,8)" fg:x="21740" fg:w="27"/><text x="12.5649%" y="351.50"></text></g><g><title>std::time::Instant::checked_duration_since (25 samples, 0.01%)</title><rect x="12.3160%" y="325" width="0.0142%" height="15" fill="rgb(223,33,50)" fg:x="21742" fg:w="25"/><text x="12.5660%" y="335.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_sub_instant (25 samples, 0.01%)</title><rect x="12.3160%" y="309" width="0.0142%" height="15" fill="rgb(219,149,13)" fg:x="21742" fg:w="25"/><text x="12.5660%" y="319.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (21 samples, 0.01%)</title><rect x="12.3183%" y="293" width="0.0119%" height="15" fill="rgb(250,156,29)" fg:x="21746" fg:w="21"/><text x="12.5683%" y="303.50"></text></g><g><title>std::time::Instant::now (284 samples, 0.16%)</title><rect x="12.3302%" y="341" width="0.1609%" height="15" fill="rgb(216,193,19)" fg:x="21767" fg:w="284"/><text x="12.5802%" y="351.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (282 samples, 0.16%)</title><rect x="12.3313%" y="325" width="0.1597%" height="15" fill="rgb(216,135,14)" fg:x="21769" fg:w="282"/><text x="12.5813%" y="335.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (282 samples, 0.16%)</title><rect x="12.3313%" y="309" width="0.1597%" height="15" fill="rgb(241,47,5)" fg:x="21769" fg:w="282"/><text x="12.5813%" y="319.50"></text></g><g><title>clock_gettime (277 samples, 0.16%)</title><rect x="12.3342%" y="293" width="0.1569%" height="15" fill="rgb(233,42,35)" fg:x="21774" fg:w="277"/><text x="12.5842%" y="303.50"></text></g><g><title>__vdso_clock_gettime (247 samples, 0.14%)</title><rect x="12.3512%" y="277" width="0.1399%" height="15" fill="rgb(231,13,6)" fg:x="21804" fg:w="247"/><text x="12.6012%" y="287.50"></text></g><g><title>[[vdso]] (172 samples, 0.10%)</title><rect x="12.3936%" y="261" width="0.0974%" height="15" fill="rgb(207,181,40)" fg:x="21879" fg:w="172"/><text x="12.6436%" y="271.50"></text></g><g><title>[libc.so.6] (21 samples, 0.01%)</title><rect x="12.5432%" y="277" width="0.0119%" height="15" fill="rgb(254,173,49)" fg:x="22143" fg:w="21"/><text x="12.7932%" y="287.50"></text></g><g><title>eframe::native::run::run_and_return::{{closure}} (890 samples, 0.50%)</title><rect x="12.0521%" y="357" width="0.5042%" height="15" fill="rgb(221,1,38)" fg:x="21276" fg:w="890"/><text x="12.3021%" y="367.50"></text></g><g><title>winit::platform_impl::platform::Window::request_redraw (115 samples, 0.07%)</title><rect x="12.4911%" y="341" width="0.0651%" height="15" fill="rgb(206,124,46)" fg:x="22051" fg:w="115"/><text x="12.7411%" y="351.50"></text></g><g><title>calloop::sources::ping::eventfd::Ping::ping (59 samples, 0.03%)</title><rect x="12.5228%" y="325" width="0.0334%" height="15" fill="rgb(249,21,11)" fg:x="22107" fg:w="59"/><text x="12.7728%" y="335.50"></text></g><g><title>nix::unistd::write (36 samples, 0.02%)</title><rect x="12.5358%" y="309" width="0.0204%" height="15" fill="rgb(222,201,40)" fg:x="22130" fg:w="36"/><text x="12.7858%" y="319.50"></text></g><g><title>write (35 samples, 0.02%)</title><rect x="12.5364%" y="293" width="0.0198%" height="15" fill="rgb(235,61,29)" fg:x="22131" fg:w="35"/><text x="12.7864%" y="303.50"></text></g><g><title>scoped_tls::ScopedKey&lt;T&gt;::set (63 samples, 0.04%)</title><rect x="12.5562%" y="357" width="0.0357%" height="15" fill="rgb(219,207,3)" fg:x="22166" fg:w="63"/><text x="12.8062%" y="367.50"></text></g><g><title>wl_display_dispatch_queue_pending (23 samples, 0.01%)</title><rect x="12.5789%" y="341" width="0.0130%" height="15" fill="rgb(222,56,46)" fg:x="22206" fg:w="23"/><text x="12.8289%" y="351.50"></text></g><g><title>std::time::Instant::now (51 samples, 0.03%)</title><rect x="12.6004%" y="357" width="0.0289%" height="15" fill="rgb(239,76,54)" fg:x="22244" fg:w="51"/><text x="12.8504%" y="367.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (50 samples, 0.03%)</title><rect x="12.6010%" y="341" width="0.0283%" height="15" fill="rgb(231,124,27)" fg:x="22245" fg:w="50"/><text x="12.8510%" y="351.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (50 samples, 0.03%)</title><rect x="12.6010%" y="325" width="0.0283%" height="15" fill="rgb(249,195,6)" fg:x="22245" fg:w="50"/><text x="12.8510%" y="335.50"></text></g><g><title>clock_gettime (49 samples, 0.03%)</title><rect x="12.6015%" y="309" width="0.0278%" height="15" fill="rgb(237,174,47)" fg:x="22246" fg:w="49"/><text x="12.8515%" y="319.50"></text></g><g><title>__vdso_clock_gettime (44 samples, 0.02%)</title><rect x="12.6044%" y="293" width="0.0249%" height="15" fill="rgb(206,201,31)" fg:x="22251" fg:w="44"/><text x="12.8544%" y="303.50"></text></g><g><title>[[vdso]] (28 samples, 0.02%)</title><rect x="12.6134%" y="277" width="0.0159%" height="15" fill="rgb(231,57,52)" fg:x="22267" fg:w="28"/><text x="12.8634%" y="287.50"></text></g><g><title>wayland_client::display::Display::flush (46 samples, 0.03%)</title><rect x="12.6293%" y="357" width="0.0261%" height="15" fill="rgb(248,177,22)" fg:x="22295" fg:w="46"/><text x="12.8793%" y="367.50"></text></g><g><title>wl_display_flush (22 samples, 0.01%)</title><rect x="12.6429%" y="341" width="0.0125%" height="15" fill="rgb(215,211,37)" fg:x="22319" fg:w="22"/><text x="12.8929%" y="351.50"></text></g><g><title>eframe::native::run::glow_integration::run_glow (2,410 samples, 1.37%)</title><rect x="11.3349%" y="421" width="1.3652%" height="15" fill="rgb(241,128,51)" fg:x="20010" fg:w="2410"/><text x="11.5849%" y="431.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2,410 samples, 1.37%)</title><rect x="11.3349%" y="405" width="1.3652%" height="15" fill="rgb(227,165,31)" fg:x="20010" fg:w="2410"/><text x="11.5849%" y="415.50"></text></g><g><title>eframe::native::run::run_and_return (2,410 samples, 1.37%)</title><rect x="11.3349%" y="389" width="1.3652%" height="15" fill="rgb(228,167,24)" fg:x="20010" fg:w="2410"/><text x="11.5849%" y="399.50"></text></g><g><title>winit::platform_impl::platform::wayland::event_loop::EventLoop&lt;T&gt;::run_return (2,410 samples, 1.37%)</title><rect x="11.3349%" y="373" width="1.3652%" height="15" fill="rgb(228,143,12)" fg:x="20010" fg:w="2410"/><text x="11.5849%" y="383.50"></text></g><g><title>winit::platform_impl::platform::wayland::window::shim::handle_window_requests (69 samples, 0.04%)</title><rect x="12.6610%" y="357" width="0.0391%" height="15" fill="rgb(249,149,8)" fg:x="22351" fg:w="69"/><text x="12.9110%" y="367.50"></text></g><g><title>eframe::native::run::run_and_return::{{closure}} (22 samples, 0.01%)</title><rect x="12.7001%" y="421" width="0.0125%" height="15" fill="rgb(243,35,44)" fg:x="22420" fg:w="22"/><text x="12.9501%" y="431.50"></text></g><g><title>[iris_dri.so] (181 samples, 0.10%)</title><rect x="13.0961%" y="165" width="0.1025%" height="15" fill="rgb(246,89,9)" fg:x="23119" fg:w="181"/><text x="13.3461%" y="175.50"></text></g><g><title>[iris_dri.so] (97 samples, 0.05%)</title><rect x="13.1436%" y="149" width="0.0549%" height="15" fill="rgb(233,213,13)" fg:x="23203" fg:w="97"/><text x="13.3936%" y="159.50"></text></g><g><title>[iris_dri.so] (61 samples, 0.03%)</title><rect x="13.1640%" y="133" width="0.0346%" height="15" fill="rgb(233,141,41)" fg:x="23239" fg:w="61"/><text x="13.4140%" y="143.50"></text></g><g><title>[iris_dri.so] (868 samples, 0.49%)</title><rect x="12.7211%" y="293" width="0.4917%" height="15" fill="rgb(239,167,4)" fg:x="22457" fg:w="868"/><text x="12.9711%" y="303.50"></text></g><g><title>[iris_dri.so] (868 samples, 0.49%)</title><rect x="12.7211%" y="277" width="0.4917%" height="15" fill="rgb(209,217,16)" fg:x="22457" fg:w="868"/><text x="12.9711%" y="287.50"></text></g><g><title>[iris_dri.so] (868 samples, 0.49%)</title><rect x="12.7211%" y="261" width="0.4917%" height="15" fill="rgb(219,88,35)" fg:x="22457" fg:w="868"/><text x="12.9711%" y="271.50"></text></g><g><title>[iris_dri.so] (868 samples, 0.49%)</title><rect x="12.7211%" y="245" width="0.4917%" height="15" fill="rgb(220,193,23)" fg:x="22457" fg:w="868"/><text x="12.9711%" y="255.50"></text></g><g><title>[iris_dri.so] (868 samples, 0.49%)</title><rect x="12.7211%" y="229" width="0.4917%" height="15" fill="rgb(230,90,52)" fg:x="22457" fg:w="868"/><text x="12.9711%" y="239.50"></text></g><g><title>[iris_dri.so] (868 samples, 0.49%)</title><rect x="12.7211%" y="213" width="0.4917%" height="15" fill="rgb(252,106,19)" fg:x="22457" fg:w="868"/><text x="12.9711%" y="223.50"></text></g><g><title>[iris_dri.so] (868 samples, 0.49%)</title><rect x="12.7211%" y="197" width="0.4917%" height="15" fill="rgb(206,74,20)" fg:x="22457" fg:w="868"/><text x="12.9711%" y="207.50"></text></g><g><title>[iris_dri.so] (605 samples, 0.34%)</title><rect x="12.8700%" y="181" width="0.3427%" height="15" fill="rgb(230,138,44)" fg:x="22720" fg:w="605"/><text x="13.1200%" y="191.50"></text></g><g><title>[libc.so.6] (25 samples, 0.01%)</title><rect x="13.1986%" y="165" width="0.0142%" height="15" fill="rgb(235,182,43)" fg:x="23300" fg:w="25"/><text x="13.4486%" y="175.50"></text></g><g><title>&lt;glutin::surface::Surface&lt;T&gt; as glutin::surface::GlSurface&lt;T&gt;&gt;::swap_buffers (879 samples, 0.50%)</title><rect x="12.7211%" y="357" width="0.4979%" height="15" fill="rgb(242,16,51)" fg:x="22457" fg:w="879"/><text x="12.9711%" y="367.50"></text></g><g><title>[libEGL_mesa.so.0.0.0] (879 samples, 0.50%)</title><rect x="12.7211%" y="341" width="0.4979%" height="15" fill="rgb(248,9,4)" fg:x="22457" fg:w="879"/><text x="12.9711%" y="351.50"></text></g><g><title>[libEGL_mesa.so.0.0.0] (879 samples, 0.50%)</title><rect x="12.7211%" y="325" width="0.4979%" height="15" fill="rgb(210,31,22)" fg:x="22457" fg:w="879"/><text x="12.9711%" y="335.50"></text></g><g><title>[libEGL_mesa.so.0.0.0] (879 samples, 0.50%)</title><rect x="12.7211%" y="309" width="0.4979%" height="15" fill="rgb(239,54,39)" fg:x="22457" fg:w="879"/><text x="12.9711%" y="319.50"></text></g><g><title>eframe::native::run::run_and_return (907 samples, 0.51%)</title><rect x="12.7126%" y="421" width="0.5138%" height="15" fill="rgb(230,99,41)" fg:x="22442" fg:w="907"/><text x="12.9626%" y="431.50"></text></g><g><title>winit::platform_impl::platform::wayland::event_loop::EventLoop&lt;T&gt;::run_return (907 samples, 0.51%)</title><rect x="12.7126%" y="405" width="0.5138%" height="15" fill="rgb(253,106,12)" fg:x="22442" fg:w="907"/><text x="12.9626%" y="415.50"></text></g><g><title>eframe::native::run::run_and_return::{{closure}} (892 samples, 0.51%)</title><rect x="12.7211%" y="389" width="0.5053%" height="15" fill="rgb(213,46,41)" fg:x="22457" fg:w="892"/><text x="12.9711%" y="399.50"></text></g><g><title>&lt;eframe::native::run::glow_integration::GlowWinitApp as eframe::native::run::WinitApp&gt;::run_ui_and_paint (892 samples, 0.51%)</title><rect x="12.7211%" y="373" width="0.5053%" height="15" fill="rgb(215,133,35)" fg:x="22457" fg:w="892"/><text x="12.9711%" y="383.50"></text></g><g><title>egui::containers::frame::Frame::show (23 samples, 0.01%)</title><rect x="13.2501%" y="421" width="0.0130%" height="15" fill="rgb(213,28,5)" fg:x="23391" fg:w="23"/><text x="13.5001%" y="431.50"></text></g><g><title>egui::placer::Placer::available_size (80 samples, 0.05%)</title><rect x="13.2926%" y="421" width="0.0453%" height="15" fill="rgb(215,77,49)" fg:x="23466" fg:w="80"/><text x="13.5426%" y="431.50"></text></g><g><title>emath::rect::Rect::expand (117 samples, 0.07%)</title><rect x="13.3702%" y="421" width="0.0663%" height="15" fill="rgb(248,100,22)" fg:x="23603" fg:w="117"/><text x="13.6202%" y="431.50"></text></g><g><title>epaint::tessellator::Path::add_line_loop (613 samples, 0.35%)</title><rect x="13.4467%" y="421" width="0.3472%" height="15" fill="rgb(208,67,9)" fg:x="23738" fg:w="613"/><text x="13.6967%" y="431.50"></text></g><g><title>epaint::tessellator::Path::fill (340 samples, 0.19%)</title><rect x="13.7939%" y="421" width="0.1926%" height="15" fill="rgb(219,133,21)" fg:x="24351" fg:w="340"/><text x="14.0439%" y="431.50"></text></g><g><title>epaint::tessellator::Tessellator::tessellate_clipped_shape (234 samples, 0.13%)</title><rect x="13.9865%" y="421" width="0.1326%" height="15" fill="rgb(246,46,29)" fg:x="24691" fg:w="234"/><text x="14.2365%" y="431.50"></text></g><g><title>epaint::tessellator::Tessellator::tessellate_rect (605 samples, 0.34%)</title><rect x="14.1191%" y="421" width="0.3427%" height="15" fill="rgb(246,185,52)" fg:x="24925" fg:w="605"/><text x="14.3691%" y="431.50"></text></g><g><title>epaint::tessellator::Tessellator::tessellate_shape (825 samples, 0.47%)</title><rect x="14.4618%" y="421" width="0.4673%" height="15" fill="rgb(252,136,11)" fg:x="25530" fg:w="825"/><text x="14.7118%" y="431.50"></text></g><g><title>epaint::tessellator::path::rounded_rectangle (319 samples, 0.18%)</title><rect x="14.9291%" y="421" width="0.1807%" height="15" fill="rgb(219,138,53)" fg:x="26355" fg:w="319"/><text x="15.1791%" y="431.50"></text></g><g><title>epaint::tessellator::stroke_path (402 samples, 0.23%)</title><rect x="15.1098%" y="421" width="0.2277%" height="15" fill="rgb(211,51,23)" fg:x="26674" fg:w="402"/><text x="15.3598%" y="431.50"></text></g><g><title>glutin::display::Display::new (30 samples, 0.02%)</title><rect x="15.3523%" y="405" width="0.0170%" height="15" fill="rgb(247,221,28)" fg:x="27102" fg:w="30"/><text x="15.6023%" y="415.50"></text></g><g><title>glutin::api::egl::display::Display::new (30 samples, 0.02%)</title><rect x="15.3523%" y="389" width="0.0170%" height="15" fill="rgb(251,222,45)" fg:x="27102" fg:w="30"/><text x="15.6023%" y="399.50"></text></g><g><title>glutin::api::egl::display::Display::initialize_display (30 samples, 0.02%)</title><rect x="15.3523%" y="373" width="0.0170%" height="15" fill="rgb(217,162,53)" fg:x="27102" fg:w="30"/><text x="15.6023%" y="383.50"></text></g><g><title>[libEGL_mesa.so.0.0.0] (30 samples, 0.02%)</title><rect x="15.3523%" y="357" width="0.0170%" height="15" fill="rgb(229,93,14)" fg:x="27102" fg:w="30"/><text x="15.6023%" y="367.50"></text></g><g><title>[libEGL_mesa.so.0.0.0] (30 samples, 0.02%)</title><rect x="15.3523%" y="341" width="0.0170%" height="15" fill="rgb(209,67,49)" fg:x="27102" fg:w="30"/><text x="15.6023%" y="351.50"></text></g><g><title>[libEGL_mesa.so.0.0.0] (30 samples, 0.02%)</title><rect x="15.3523%" y="325" width="0.0170%" height="15" fill="rgb(213,87,29)" fg:x="27102" fg:w="30"/><text x="15.6023%" y="335.50"></text></g><g><title>[libEGL_mesa.so.0.0.0] (30 samples, 0.02%)</title><rect x="15.3523%" y="309" width="0.0170%" height="15" fill="rgb(205,151,52)" fg:x="27102" fg:w="30"/><text x="15.6023%" y="319.50"></text></g><g><title>dlopen (28 samples, 0.02%)</title><rect x="15.3534%" y="293" width="0.0159%" height="15" fill="rgb(253,215,39)" fg:x="27104" fg:w="28"/><text x="15.6034%" y="303.50"></text></g><g><title>[libc.so.6] (28 samples, 0.02%)</title><rect x="15.3534%" y="277" width="0.0159%" height="15" fill="rgb(221,220,41)" fg:x="27104" fg:w="28"/><text x="15.6034%" y="287.50"></text></g><g><title>[ld-linux-x86-64.so.2] (28 samples, 0.02%)</title><rect x="15.3534%" y="261" width="0.0159%" height="15" fill="rgb(218,133,21)" fg:x="27104" fg:w="28"/><text x="15.6034%" y="271.50"></text></g><g><title>_dl_catch_exception (28 samples, 0.02%)</title><rect x="15.3534%" y="245" width="0.0159%" height="15" fill="rgb(221,193,43)" fg:x="27104" fg:w="28"/><text x="15.6034%" y="255.50"></text></g><g><title>[libc.so.6] (28 samples, 0.02%)</title><rect x="15.3534%" y="229" width="0.0159%" height="15" fill="rgb(240,128,52)" fg:x="27104" fg:w="28"/><text x="15.6034%" y="239.50"></text></g><g><title>[ld-linux-x86-64.so.2] (28 samples, 0.02%)</title><rect x="15.3534%" y="213" width="0.0159%" height="15" fill="rgb(253,114,12)" fg:x="27104" fg:w="28"/><text x="15.6034%" y="223.50"></text></g><g><title>_dl_catch_exception (28 samples, 0.02%)</title><rect x="15.3534%" y="197" width="0.0159%" height="15" fill="rgb(215,223,47)" fg:x="27104" fg:w="28"/><text x="15.6034%" y="207.50"></text></g><g><title>[ld-linux-x86-64.so.2] (28 samples, 0.02%)</title><rect x="15.3534%" y="181" width="0.0159%" height="15" fill="rgb(248,225,23)" fg:x="27104" fg:w="28"/><text x="15.6034%" y="191.50"></text></g><g><title>_dl_catch_exception (28 samples, 0.02%)</title><rect x="15.3534%" y="165" width="0.0159%" height="15" fill="rgb(250,108,0)" fg:x="27104" fg:w="28"/><text x="15.6034%" y="175.50"></text></g><g><title>[ld-linux-x86-64.so.2] (28 samples, 0.02%)</title><rect x="15.3534%" y="149" width="0.0159%" height="15" fill="rgb(228,208,7)" fg:x="27104" fg:w="28"/><text x="15.6034%" y="159.50"></text></g><g><title>[ld-linux-x86-64.so.2] (28 samples, 0.02%)</title><rect x="15.3534%" y="133" width="0.0159%" height="15" fill="rgb(244,45,10)" fg:x="27104" fg:w="28"/><text x="15.6034%" y="143.50"></text></g><g><title>glutin_winit::DisplayBuilder::build (49 samples, 0.03%)</title><rect x="15.3523%" y="421" width="0.0278%" height="15" fill="rgb(207,125,25)" fg:x="27102" fg:w="49"/><text x="15.6023%" y="431.50"></text></g><g><title>glutin_winit::finalize_window (19 samples, 0.01%)</title><rect x="15.3693%" y="405" width="0.0108%" height="15" fill="rgb(210,195,18)" fg:x="27132" fg:w="19"/><text x="15.6193%" y="415.50"></text></g><g><title>winit::platform_impl::platform::wayland::window::Window::new (19 samples, 0.01%)</title><rect x="15.3693%" y="389" width="0.0108%" height="15" fill="rgb(249,80,12)" fg:x="27132" fg:w="19"/><text x="15.6193%" y="399.50"></text></g><g><title>hypotf (1,000 samples, 0.57%)</title><rect x="15.3942%" y="421" width="0.5665%" height="15" fill="rgb(221,65,9)" fg:x="27176" fg:w="1000"/><text x="15.6442%" y="431.50"></text></g><g><title>malloc (19 samples, 0.01%)</title><rect x="15.9629%" y="421" width="0.0108%" height="15" fill="rgb(235,49,36)" fg:x="28180" fg:w="19"/><text x="16.2129%" y="431.50"></text></g><g><title>realloc (48 samples, 0.03%)</title><rect x="15.9913%" y="421" width="0.0272%" height="15" fill="rgb(225,32,20)" fg:x="28230" fg:w="48"/><text x="16.2413%" y="431.50"></text></g><g><title>&lt;calloop::sources::generic::Generic&lt;F,E&gt; as calloop::sources::EventSource&gt;::process_events (26 samples, 0.01%)</title><rect x="16.0462%" y="341" width="0.0147%" height="15" fill="rgb(215,141,46)" fg:x="28327" fg:w="26"/><text x="16.2962%" y="351.50"></text></g><g><title>wayland_client::event_queue::ReadEventsGuard::read_events (25 samples, 0.01%)</title><rect x="16.0468%" y="325" width="0.0142%" height="15" fill="rgb(250,160,47)" fg:x="28328" fg:w="25"/><text x="16.2968%" y="335.50"></text></g><g><title>wl_display_read_events (25 samples, 0.01%)</title><rect x="16.0468%" y="309" width="0.0142%" height="15" fill="rgb(216,222,40)" fg:x="28328" fg:w="25"/><text x="16.2968%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (40 samples, 0.02%)</title><rect x="16.1578%" y="309" width="0.0227%" height="15" fill="rgb(234,217,39)" fg:x="28524" fg:w="40"/><text x="16.4078%" y="319.50"></text></g><g><title>&lt;winit::platform_impl::platform::WindowId as core::hash::Hash&gt;::hash (22 samples, 0.01%)</title><rect x="16.1680%" y="293" width="0.0125%" height="15" fill="rgb(207,178,40)" fg:x="28542" fg:w="22"/><text x="16.4180%" y="303.50"></text></g><g><title>[libc.so.6] (22 samples, 0.01%)</title><rect x="16.2020%" y="277" width="0.0125%" height="15" fill="rgb(221,136,13)" fg:x="28602" fg:w="22"/><text x="16.4520%" y="287.50"></text></g><g><title>&lt;core::cell::RefCell&lt;calloop::sources::DispatcherInner&lt;S,F&gt;&gt; as calloop::sources::EventDispatcher&lt;Data&gt;&gt;::process_events (317 samples, 0.18%)</title><rect x="16.0377%" y="357" width="0.1796%" height="15" fill="rgb(249,199,10)" fg:x="28312" fg:w="317"/><text x="16.2877%" y="367.50"></text></g><g><title>&lt;calloop::sources::ping::eventfd::PingSource as calloop::sources::EventSource&gt;::process_events (276 samples, 0.16%)</title><rect x="16.0609%" y="341" width="0.1563%" height="15" fill="rgb(249,222,13)" fg:x="28353" fg:w="276"/><text x="16.3109%" y="351.50"></text></g><g><title>&lt;calloop::sources::generic::Generic&lt;F,E&gt; as calloop::sources::EventSource&gt;::process_events (276 samples, 0.16%)</title><rect x="16.0609%" y="325" width="0.1563%" height="15" fill="rgb(244,185,38)" fg:x="28353" fg:w="276"/><text x="16.3109%" y="335.50"></text></g><g><title>nix::unistd::read (65 samples, 0.04%)</title><rect x="16.1805%" y="309" width="0.0368%" height="15" fill="rgb(236,202,9)" fg:x="28564" fg:w="65"/><text x="16.4305%" y="319.50"></text></g><g><title>read (64 samples, 0.04%)</title><rect x="16.1810%" y="293" width="0.0363%" height="15" fill="rgb(250,229,37)" fg:x="28565" fg:w="64"/><text x="16.4310%" y="303.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (39 samples, 0.02%)</title><rect x="16.2773%" y="309" width="0.0221%" height="15" fill="rgb(206,174,23)" fg:x="28735" fg:w="39"/><text x="16.5273%" y="319.50"></text></g><g><title>nix::sys::epoll::EpollEvent::data (19 samples, 0.01%)</title><rect x="16.2886%" y="293" width="0.0108%" height="15" fill="rgb(211,33,43)" fg:x="28755" fg:w="19"/><text x="16.5386%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (126 samples, 0.07%)</title><rect x="16.2360%" y="325" width="0.0714%" height="15" fill="rgb(245,58,50)" fg:x="28662" fg:w="126"/><text x="16.4860%" y="335.50"></text></g><g><title>[libc.so.6] (29 samples, 0.02%)</title><rect x="16.3340%" y="309" width="0.0164%" height="15" fill="rgb(244,68,36)" fg:x="28835" fg:w="29"/><text x="16.5840%" y="319.50"></text></g><g><title>epoll_wait (70 samples, 0.04%)</title><rect x="16.3119%" y="325" width="0.0397%" height="15" fill="rgb(232,229,15)" fg:x="28796" fg:w="70"/><text x="16.5619%" y="335.50"></text></g><g><title>calloop::loop_logic::EventLoop&lt;Data&gt;::dispatch (558 samples, 0.32%)</title><rect x="16.0377%" y="373" width="0.3161%" height="15" fill="rgb(254,30,23)" fg:x="28312" fg:w="558"/><text x="16.2877%" y="383.50"></text></g><g><title>calloop::sys::Poll::poll (241 samples, 0.14%)</title><rect x="16.2173%" y="357" width="0.1365%" height="15" fill="rgb(235,160,14)" fg:x="28629" fg:w="241"/><text x="16.4673%" y="367.50"></text></g><g><title>calloop::sys::epoll::Epoll::poll (241 samples, 0.14%)</title><rect x="16.2173%" y="341" width="0.1365%" height="15" fill="rgb(212,155,44)" fg:x="28629" fg:w="241"/><text x="16.4673%" y="351.50"></text></g><g><title>&lt;eframe::native::run::glow_integration::GlowWinitApp as eframe::native::run::WinitApp&gt;::on_event (23 samples, 0.01%)</title><rect x="16.3538%" y="357" width="0.0130%" height="15" fill="rgb(226,2,50)" fg:x="28870" fg:w="23"/><text x="16.6038%" y="367.50"></text></g><g><title>__rust_probestack (23 samples, 0.01%)</title><rect x="16.3538%" y="341" width="0.0130%" height="15" fill="rgb(234,177,6)" fg:x="28870" fg:w="23"/><text x="16.6038%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (288 samples, 0.16%)</title><rect x="16.3668%" y="341" width="0.1631%" height="15" fill="rgb(217,24,9)" fg:x="28893" fg:w="288"/><text x="16.6168%" y="351.50"></text></g><g><title>cfree (260 samples, 0.15%)</title><rect x="16.3827%" y="325" width="0.1473%" height="15" fill="rgb(220,13,46)" fg:x="28921" fg:w="260"/><text x="16.6327%" y="335.50"></text></g><g><title>[libc.so.6] (245 samples, 0.14%)</title><rect x="16.3912%" y="309" width="0.1388%" height="15" fill="rgb(239,221,27)" fg:x="28936" fg:w="245"/><text x="16.6412%" y="319.50"></text></g><g><title>[libc.so.6] (175 samples, 0.10%)</title><rect x="16.4308%" y="293" width="0.0991%" height="15" fill="rgb(222,198,25)" fg:x="29006" fg:w="175"/><text x="16.6808%" y="303.50"></text></g><g><title>[iris_dri.so] (486 samples, 0.28%)</title><rect x="19.7344%" y="69" width="0.2753%" height="15" fill="rgb(211,99,13)" fg:x="34838" fg:w="486"/><text x="19.9844%" y="79.50"></text></g><g><title>[iris_dri.so] (190 samples, 0.11%)</title><rect x="19.9021%" y="53" width="0.1076%" height="15" fill="rgb(232,111,31)" fg:x="35134" fg:w="190"/><text x="20.1521%" y="63.50"></text></g><g><title>[iris_dri.so] (22 samples, 0.01%)</title><rect x="19.9973%" y="37" width="0.0125%" height="15" fill="rgb(245,82,37)" fg:x="35302" fg:w="22"/><text x="20.2473%" y="47.50"></text></g><g><title>[iris_dri.so] (1,269 samples, 0.72%)</title><rect x="19.2977%" y="101" width="0.7188%" height="15" fill="rgb(227,149,46)" fg:x="34067" fg:w="1269"/><text x="19.5477%" y="111.50"></text></g><g><title>[iris_dri.so] (839 samples, 0.48%)</title><rect x="19.5413%" y="85" width="0.4753%" height="15" fill="rgb(218,36,50)" fg:x="34497" fg:w="839"/><text x="19.7913%" y="95.50"></text></g><g><title>[libc.so.6] (21 samples, 0.01%)</title><rect x="20.0165%" y="101" width="0.0119%" height="15" fill="rgb(226,80,48)" fg:x="35336" fg:w="21"/><text x="20.2665%" y="111.50"></text></g><g><title>clock_gettime (24 samples, 0.01%)</title><rect x="20.0381%" y="101" width="0.0136%" height="15" fill="rgb(238,224,15)" fg:x="35374" fg:w="24"/><text x="20.2881%" y="111.50"></text></g><g><title>__vdso_clock_gettime (22 samples, 0.01%)</title><rect x="20.0392%" y="85" width="0.0125%" height="15" fill="rgb(241,136,10)" fg:x="35376" fg:w="22"/><text x="20.2892%" y="95.50"></text></g><g><title>ioctl (19 samples, 0.01%)</title><rect x="20.0517%" y="101" width="0.0108%" height="15" fill="rgb(208,32,45)" fg:x="35398" fg:w="19"/><text x="20.3017%" y="111.50"></text></g><g><title>[iris_dri.so] (1,728 samples, 0.98%)</title><rect x="19.0966%" y="117" width="0.9788%" height="15" fill="rgb(207,135,9)" fg:x="33712" fg:w="1728"/><text x="19.3466%" y="127.50"></text></g><g><title>malloc (23 samples, 0.01%)</title><rect x="20.0624%" y="101" width="0.0130%" height="15" fill="rgb(206,86,44)" fg:x="35417" fg:w="23"/><text x="20.3124%" y="111.50"></text></g><g><title>[iris_dri.so] (2,033 samples, 1.15%)</title><rect x="18.9369%" y="133" width="1.1516%" height="15" fill="rgb(245,177,15)" fg:x="33430" fg:w="2033"/><text x="19.1869%" y="143.50"></text></g><g><title>ioctl (23 samples, 0.01%)</title><rect x="20.0755%" y="117" width="0.0130%" height="15" fill="rgb(206,64,50)" fg:x="35440" fg:w="23"/><text x="20.3255%" y="127.50"></text></g><g><title>[iris_dri.so] (2,602 samples, 1.47%)</title><rect x="18.6412%" y="149" width="1.4739%" height="15" fill="rgb(234,36,40)" fg:x="32908" fg:w="2602"/><text x="18.8912%" y="159.50"></text></g><g><title>cfree (46 samples, 0.03%)</title><rect x="20.0890%" y="133" width="0.0261%" height="15" fill="rgb(213,64,8)" fg:x="35464" fg:w="46"/><text x="20.3390%" y="143.50"></text></g><g><title>[libc.so.6] (33 samples, 0.02%)</title><rect x="20.0964%" y="117" width="0.0187%" height="15" fill="rgb(210,75,36)" fg:x="35477" fg:w="33"/><text x="20.3464%" y="127.50"></text></g><g><title>cfree (24 samples, 0.01%)</title><rect x="20.1151%" y="149" width="0.0136%" height="15" fill="rgb(229,88,21)" fg:x="35510" fg:w="24"/><text x="20.3651%" y="159.50"></text></g><g><title>[libc.so.6] (20 samples, 0.01%)</title><rect x="20.1174%" y="133" width="0.0113%" height="15" fill="rgb(252,204,47)" fg:x="35514" fg:w="20"/><text x="20.3674%" y="143.50"></text></g><g><title>[iris_dri.so] (3,425 samples, 1.94%)</title><rect x="18.2010%" y="165" width="1.9401%" height="15" fill="rgb(208,77,27)" fg:x="32131" fg:w="3425"/><text x="18.4510%" y="175.50">[..</text></g><g><title>ioctl (22 samples, 0.01%)</title><rect x="20.1287%" y="149" width="0.0125%" height="15" fill="rgb(221,76,26)" fg:x="35534" fg:w="22"/><text x="20.3787%" y="159.50"></text></g><g><title>clock_gettime (88 samples, 0.05%)</title><rect x="20.1412%" y="165" width="0.0498%" height="15" fill="rgb(225,139,18)" fg:x="35556" fg:w="88"/><text x="20.3912%" y="175.50"></text></g><g><title>__vdso_clock_gettime (70 samples, 0.04%)</title><rect x="20.1514%" y="149" width="0.0397%" height="15" fill="rgb(230,137,11)" fg:x="35574" fg:w="70"/><text x="20.4014%" y="159.50"></text></g><g><title>[[vdso]] (44 samples, 0.02%)</title><rect x="20.1661%" y="133" width="0.0249%" height="15" fill="rgb(212,28,1)" fg:x="35600" fg:w="44"/><text x="20.4161%" y="143.50"></text></g><g><title>[iris_dri.so] (4,377 samples, 2.48%)</title><rect x="17.7280%" y="181" width="2.4794%" height="15" fill="rgb(248,164,17)" fg:x="31296" fg:w="4377"/><text x="17.9780%" y="191.50">[i..</text></g><g><title>pthread_once (29 samples, 0.02%)</title><rect x="20.1910%" y="165" width="0.0164%" height="15" fill="rgb(222,171,42)" fg:x="35644" fg:w="29"/><text x="20.4410%" y="175.50"></text></g><g><title>[libc.so.6] (23 samples, 0.01%)</title><rect x="20.2074%" y="181" width="0.0130%" height="15" fill="rgb(243,84,45)" fg:x="35673" fg:w="23"/><text x="20.4574%" y="191.50"></text></g><g><title>__libc_calloc (137 samples, 0.08%)</title><rect x="20.2205%" y="181" width="0.0776%" height="15" fill="rgb(252,49,23)" fg:x="35696" fg:w="137"/><text x="20.4705%" y="191.50"></text></g><g><title>[libc.so.6] (68 samples, 0.04%)</title><rect x="20.2596%" y="165" width="0.0385%" height="15" fill="rgb(215,19,7)" fg:x="35765" fg:w="68"/><text x="20.5096%" y="175.50"></text></g><g><title>cfree (40 samples, 0.02%)</title><rect x="20.2981%" y="181" width="0.0227%" height="15" fill="rgb(238,81,41)" fg:x="35833" fg:w="40"/><text x="20.5481%" y="191.50"></text></g><g><title>[libc.so.6] (35 samples, 0.02%)</title><rect x="20.3009%" y="165" width="0.0198%" height="15" fill="rgb(210,199,37)" fg:x="35838" fg:w="35"/><text x="20.5509%" y="175.50"></text></g><g><title>ioctl (59 samples, 0.03%)</title><rect x="20.3207%" y="181" width="0.0334%" height="15" fill="rgb(244,192,49)" fg:x="35873" fg:w="59"/><text x="20.5707%" y="191.50"></text></g><g><title>[iris_dri.so] (5,447 samples, 3.09%)</title><rect x="17.2919%" y="197" width="3.0855%" height="15" fill="rgb(226,211,11)" fg:x="30526" fg:w="5447"/><text x="17.5419%" y="207.50">[ir..</text></g><g><title>malloc (41 samples, 0.02%)</title><rect x="20.3542%" y="181" width="0.0232%" height="15" fill="rgb(236,162,54)" fg:x="35932" fg:w="41"/><text x="20.6042%" y="191.50"></text></g><g><title>cfree (26 samples, 0.01%)</title><rect x="20.3779%" y="197" width="0.0147%" height="15" fill="rgb(220,229,9)" fg:x="35974" fg:w="26"/><text x="20.6279%" y="207.50"></text></g><g><title>[libc.so.6] (18 samples, 0.01%)</title><rect x="20.3825%" y="181" width="0.0102%" height="15" fill="rgb(250,87,22)" fg:x="35982" fg:w="18"/><text x="20.6325%" y="191.50"></text></g><g><title>[iris_dri.so] (5,639 samples, 3.19%)</title><rect x="17.2069%" y="213" width="3.1943%" height="15" fill="rgb(239,43,17)" fg:x="30376" fg:w="5639"/><text x="17.4569%" y="223.50">[ir..</text></g><g><title>[iris_dri.so] (6,146 samples, 3.48%)</title><rect x="16.9542%" y="245" width="3.4815%" height="15" fill="rgb(231,177,25)" fg:x="29930" fg:w="6146"/><text x="17.2042%" y="255.50">[ir..</text></g><g><title>[iris_dri.so] (6,033 samples, 3.42%)</title><rect x="17.0183%" y="229" width="3.4175%" height="15" fill="rgb(219,179,1)" fg:x="30043" fg:w="6033"/><text x="17.2683%" y="239.50">[ir..</text></g><g><title>__libc_calloc (61 samples, 0.03%)</title><rect x="20.4012%" y="213" width="0.0346%" height="15" fill="rgb(238,219,53)" fg:x="36015" fg:w="61"/><text x="20.6512%" y="223.50"></text></g><g><title>[libc.so.6] (24 samples, 0.01%)</title><rect x="20.4221%" y="197" width="0.0136%" height="15" fill="rgb(232,167,36)" fg:x="36052" fg:w="24"/><text x="20.6721%" y="207.50"></text></g><g><title>cfree (57 samples, 0.03%)</title><rect x="20.4357%" y="245" width="0.0323%" height="15" fill="rgb(244,19,51)" fg:x="36076" fg:w="57"/><text x="20.6857%" y="255.50"></text></g><g><title>[libc.so.6] (45 samples, 0.03%)</title><rect x="20.4425%" y="229" width="0.0255%" height="15" fill="rgb(224,6,22)" fg:x="36088" fg:w="45"/><text x="20.6925%" y="239.50"></text></g><g><title>clock_gettime (28 samples, 0.02%)</title><rect x="20.4680%" y="245" width="0.0159%" height="15" fill="rgb(224,145,5)" fg:x="36133" fg:w="28"/><text x="20.7180%" y="255.50"></text></g><g><title>__vdso_clock_gettime (24 samples, 0.01%)</title><rect x="20.4703%" y="229" width="0.0136%" height="15" fill="rgb(234,130,49)" fg:x="36137" fg:w="24"/><text x="20.7203%" y="239.50"></text></g><g><title>[iris_dri.so] (6,516 samples, 3.69%)</title><rect x="16.8138%" y="277" width="3.6911%" height="15" fill="rgb(254,6,2)" fg:x="29682" fg:w="6516"/><text x="17.0638%" y="287.50">[iri..</text></g><g><title>[iris_dri.so] (6,427 samples, 3.64%)</title><rect x="16.8642%" y="261" width="3.6407%" height="15" fill="rgb(208,96,46)" fg:x="29771" fg:w="6427"/><text x="17.1142%" y="271.50">[iri..</text></g><g><title>ioctl (37 samples, 0.02%)</title><rect x="20.4839%" y="245" width="0.0210%" height="15" fill="rgb(239,3,39)" fg:x="36161" fg:w="37"/><text x="20.7339%" y="255.50"></text></g><g><title>[libEGL_mesa.so.0.0.0] (38 samples, 0.02%)</title><rect x="20.5048%" y="277" width="0.0215%" height="15" fill="rgb(233,210,1)" fg:x="36198" fg:w="38"/><text x="20.7548%" y="287.50"></text></g><g><title>[libc.so.6] (30 samples, 0.02%)</title><rect x="20.5626%" y="245" width="0.0170%" height="15" fill="rgb(244,137,37)" fg:x="36300" fg:w="30"/><text x="20.8126%" y="255.50"></text></g><g><title>__poll (57 samples, 0.03%)</title><rect x="20.5484%" y="261" width="0.0323%" height="15" fill="rgb(240,136,2)" fg:x="36275" fg:w="57"/><text x="20.7984%" y="271.50"></text></g><g><title>[libwayland-client.so.0.22.0] (23 samples, 0.01%)</title><rect x="20.5955%" y="245" width="0.0130%" height="15" fill="rgb(239,18,37)" fg:x="36358" fg:w="23"/><text x="20.8455%" y="255.50"></text></g><g><title>wl_display_flush (67 samples, 0.04%)</title><rect x="20.5807%" y="261" width="0.0380%" height="15" fill="rgb(218,185,22)" fg:x="36332" fg:w="67"/><text x="20.8307%" y="271.50"></text></g><g><title>pthread_mutex_lock (18 samples, 0.01%)</title><rect x="20.6085%" y="245" width="0.0102%" height="15" fill="rgb(225,218,4)" fg:x="36381" fg:w="18"/><text x="20.8585%" y="255.50"></text></g><g><title>pthread_mutex_lock (27 samples, 0.02%)</title><rect x="20.6278%" y="245" width="0.0153%" height="15" fill="rgb(230,182,32)" fg:x="36415" fg:w="27"/><text x="20.8778%" y="255.50"></text></g><g><title>wl_display_prepare_read_queue (48 samples, 0.03%)</title><rect x="20.6187%" y="261" width="0.0272%" height="15" fill="rgb(242,56,43)" fg:x="36399" fg:w="48"/><text x="20.8687%" y="271.50"></text></g><g><title>[libc.so.6] (64 samples, 0.04%)</title><rect x="20.8560%" y="245" width="0.0363%" height="15" fill="rgb(233,99,24)" fg:x="36818" fg:w="64"/><text x="21.1060%" y="255.50"></text></g><g><title>[libc.so.6] (23 samples, 0.01%)</title><rect x="20.9546%" y="229" width="0.0130%" height="15" fill="rgb(234,209,42)" fg:x="36992" fg:w="23"/><text x="21.2046%" y="239.50"></text></g><g><title>[libwayland-client.so.0.22.0] (40 samples, 0.02%)</title><rect x="20.9676%" y="229" width="0.0227%" height="15" fill="rgb(227,7,12)" fg:x="37015" fg:w="40"/><text x="21.2176%" y="239.50"></text></g><g><title>[libwayland-client.so.0.22.0] (344 samples, 0.19%)</title><rect x="20.8923%" y="245" width="0.1949%" height="15" fill="rgb(245,203,43)" fg:x="36882" fg:w="344"/><text x="21.1423%" y="255.50"></text></g><g><title>__libc_calloc (171 samples, 0.10%)</title><rect x="20.9903%" y="229" width="0.0969%" height="15" fill="rgb(238,205,33)" fg:x="37055" fg:w="171"/><text x="21.2403%" y="239.50"></text></g><g><title>[libc.so.6] (94 samples, 0.05%)</title><rect x="21.0339%" y="213" width="0.0532%" height="15" fill="rgb(231,56,7)" fg:x="37132" fg:w="94"/><text x="21.2839%" y="223.50"></text></g><g><title>[libc.so.6] (20 samples, 0.01%)</title><rect x="21.0758%" y="197" width="0.0113%" height="15" fill="rgb(244,186,29)" fg:x="37206" fg:w="20"/><text x="21.3258%" y="207.50"></text></g><g><title>pthread_cond_broadcast (30 samples, 0.02%)</title><rect x="21.0872%" y="245" width="0.0170%" height="15" fill="rgb(234,111,31)" fg:x="37226" fg:w="30"/><text x="21.3372%" y="255.50"></text></g><g><title>[libc.so.6] (30 samples, 0.02%)</title><rect x="21.1245%" y="229" width="0.0170%" height="15" fill="rgb(241,149,10)" fg:x="37292" fg:w="30"/><text x="21.3745%" y="239.50"></text></g><g><title>recvmsg (54 samples, 0.03%)</title><rect x="21.1138%" y="245" width="0.0306%" height="15" fill="rgb(249,206,44)" fg:x="37273" fg:w="54"/><text x="21.3638%" y="255.50"></text></g><g><title>wl_display_dispatch_queue (1,111 samples, 0.63%)</title><rect x="20.5264%" y="277" width="0.6293%" height="15" fill="rgb(251,153,30)" fg:x="36236" fg:w="1111"/><text x="20.7764%" y="287.50"></text></g><g><title>wl_display_read_events (900 samples, 0.51%)</title><rect x="20.6459%" y="261" width="0.5098%" height="15" fill="rgb(239,152,38)" fg:x="36447" fg:w="900"/><text x="20.8959%" y="271.50"></text></g><g><title>wl_list_insert (20 samples, 0.01%)</title><rect x="21.1444%" y="245" width="0.0113%" height="15" fill="rgb(249,139,47)" fg:x="37327" fg:w="20"/><text x="21.3944%" y="255.50"></text></g><g><title>[libc.so.6] (29 samples, 0.02%)</title><rect x="21.2067%" y="245" width="0.0164%" height="15" fill="rgb(244,64,35)" fg:x="37437" fg:w="29"/><text x="21.4567%" y="255.50"></text></g><g><title>[libffi.so.8.1.2] (226 samples, 0.13%)</title><rect x="21.2899%" y="229" width="0.1280%" height="15" fill="rgb(216,46,15)" fg:x="37584" fg:w="226"/><text x="21.5399%" y="239.50"></text></g><g><title>[libffi.so.8.1.2] (123 samples, 0.07%)</title><rect x="21.3483%" y="213" width="0.0697%" height="15" fill="rgb(250,74,19)" fg:x="37687" fg:w="123"/><text x="21.5983%" y="223.50"></text></g><g><title>[libffi.so.8.1.2] (84 samples, 0.05%)</title><rect x="21.3704%" y="197" width="0.0476%" height="15" fill="rgb(249,42,33)" fg:x="37726" fg:w="84"/><text x="21.6204%" y="207.50"></text></g><g><title>[libwayland-client.so.0.22.0] (18 samples, 0.01%)</title><rect x="21.4180%" y="229" width="0.0102%" height="15" fill="rgb(242,149,17)" fg:x="37810" fg:w="18"/><text x="21.6680%" y="239.50"></text></g><g><title>[libc.so.6] (19 samples, 0.01%)</title><rect x="21.5630%" y="197" width="0.0108%" height="15" fill="rgb(244,29,21)" fg:x="38066" fg:w="19"/><text x="21.8130%" y="207.50"></text></g><g><title>[libEGL_mesa.so.0.0.0] (66 samples, 0.04%)</title><rect x="21.6111%" y="181" width="0.0374%" height="15" fill="rgb(220,130,37)" fg:x="38151" fg:w="66"/><text x="21.8611%" y="191.50"></text></g><g><title>[libc.so.6] (24 samples, 0.01%)</title><rect x="21.6485%" y="181" width="0.0136%" height="15" fill="rgb(211,67,2)" fg:x="38217" fg:w="24"/><text x="21.8985%" y="191.50"></text></g><g><title>[libwayland-client.so.0.22.0] (63 samples, 0.04%)</title><rect x="21.6695%" y="181" width="0.0357%" height="15" fill="rgb(235,68,52)" fg:x="38254" fg:w="63"/><text x="21.9195%" y="191.50"></text></g><g><title>[libwayland-client.so.0.22.0] (49 samples, 0.03%)</title><rect x="21.7103%" y="165" width="0.0278%" height="15" fill="rgb(246,142,3)" fg:x="38326" fg:w="49"/><text x="21.9603%" y="175.50"></text></g><g><title>ffi_call (563 samples, 0.32%)</title><rect x="21.4282%" y="229" width="0.3189%" height="15" fill="rgb(241,25,7)" fg:x="37828" fg:w="563"/><text x="21.6782%" y="239.50"></text></g><g><title>[libffi.so.8.1.2] (510 samples, 0.29%)</title><rect x="21.4582%" y="213" width="0.2889%" height="15" fill="rgb(242,119,39)" fg:x="37881" fg:w="510"/><text x="21.7082%" y="223.50"></text></g><g><title>[libffi.so.8.1.2] (306 samples, 0.17%)</title><rect x="21.5737%" y="197" width="0.1733%" height="15" fill="rgb(241,98,45)" fg:x="38085" fg:w="306"/><text x="21.8237%" y="207.50"></text></g><g><title>wl_proxy_destroy (71 samples, 0.04%)</title><rect x="21.7069%" y="181" width="0.0402%" height="15" fill="rgb(254,28,30)" fg:x="38320" fg:w="71"/><text x="21.9569%" y="191.50"></text></g><g><title>[libwayland-client.so.0.22.0] (932 samples, 0.53%)</title><rect x="21.2231%" y="245" width="0.5279%" height="15" fill="rgb(241,142,54)" fg:x="37466" fg:w="932"/><text x="21.4731%" y="255.50"></text></g><g><title>cfree (23 samples, 0.01%)</title><rect x="21.7511%" y="245" width="0.0130%" height="15" fill="rgb(222,85,15)" fg:x="38398" fg:w="23"/><text x="22.0011%" y="255.50"></text></g><g><title>pthread_mutex_lock (39 samples, 0.02%)</title><rect x="21.7641%" y="245" width="0.0221%" height="15" fill="rgb(210,85,47)" fg:x="38421" fg:w="39"/><text x="22.0141%" y="255.50"></text></g><g><title>[libwayland-client.so.0.22.0] (1,112 samples, 0.63%)</title><rect x="21.1642%" y="261" width="0.6299%" height="15" fill="rgb(224,206,25)" fg:x="37362" fg:w="1112"/><text x="21.4142%" y="271.50"></text></g><g><title>cfree (118 samples, 0.07%)</title><rect x="21.7941%" y="261" width="0.0668%" height="15" fill="rgb(243,201,19)" fg:x="38474" fg:w="118"/><text x="22.0441%" y="271.50"></text></g><g><title>[libc.so.6] (113 samples, 0.06%)</title><rect x="21.7969%" y="245" width="0.0640%" height="15" fill="rgb(236,59,4)" fg:x="38479" fg:w="113"/><text x="22.0469%" y="255.50"></text></g><g><title>pthread_mutex_lock (24 samples, 0.01%)</title><rect x="21.8609%" y="261" width="0.0136%" height="15" fill="rgb(254,179,45)" fg:x="38592" fg:w="24"/><text x="22.1109%" y="271.50"></text></g><g><title>wl_display_dispatch_queue_pending (1,275 samples, 0.72%)</title><rect x="21.1557%" y="277" width="0.7222%" height="15" fill="rgb(226,14,10)" fg:x="37347" fg:w="1275"/><text x="21.4057%" y="287.50"></text></g><g><title>[libc.so.6] (32 samples, 0.02%)</title><rect x="21.9193%" y="229" width="0.0181%" height="15" fill="rgb(244,27,41)" fg:x="38695" fg:w="32"/><text x="22.1693%" y="239.50"></text></g><g><title>[libwayland-client.so.0.22.0] (87 samples, 0.05%)</title><rect x="21.8898%" y="261" width="0.0493%" height="15" fill="rgb(235,35,32)" fg:x="38643" fg:w="87"/><text x="22.1398%" y="271.50"></text></g><g><title>sendmsg (62 samples, 0.04%)</title><rect x="21.9040%" y="245" width="0.0351%" height="15" fill="rgb(218,68,31)" fg:x="38668" fg:w="62"/><text x="22.1540%" y="255.50"></text></g><g><title>wl_display_flush (122 samples, 0.07%)</title><rect x="21.8779%" y="277" width="0.0691%" height="15" fill="rgb(207,120,37)" fg:x="38622" fg:w="122"/><text x="22.1279%" y="287.50"></text></g><g><title>[libwayland-client.so.0.22.0] (105 samples, 0.06%)</title><rect x="21.9958%" y="261" width="0.0595%" height="15" fill="rgb(227,98,0)" fg:x="38830" fg:w="105"/><text x="22.2458%" y="271.50"></text></g><g><title>[libwayland-client.so.0.22.0] (33 samples, 0.02%)</title><rect x="22.0365%" y="245" width="0.0187%" height="15" fill="rgb(207,7,3)" fg:x="38902" fg:w="33"/><text x="22.2865%" y="255.50"></text></g><g><title>[libc.so.6] (35 samples, 0.02%)</title><rect x="22.2252%" y="245" width="0.0198%" height="15" fill="rgb(206,98,19)" fg:x="39235" fg:w="35"/><text x="22.4752%" y="255.50"></text></g><g><title>[libc.so.6] (52 samples, 0.03%)</title><rect x="22.3407%" y="229" width="0.0295%" height="15" fill="rgb(217,5,26)" fg:x="39439" fg:w="52"/><text x="22.5907%" y="239.50"></text></g><g><title>[libwayland-client.so.0.22.0] (53 samples, 0.03%)</title><rect x="22.3702%" y="229" width="0.0300%" height="15" fill="rgb(235,190,38)" fg:x="39491" fg:w="53"/><text x="22.6202%" y="239.50"></text></g><g><title>__libc_calloc (223 samples, 0.13%)</title><rect x="22.4002%" y="229" width="0.1263%" height="15" fill="rgb(247,86,24)" fg:x="39544" fg:w="223"/><text x="22.6502%" y="239.50"></text></g><g><title>[libc.so.6] (119 samples, 0.07%)</title><rect x="22.4591%" y="213" width="0.0674%" height="15" fill="rgb(205,101,16)" fg:x="39648" fg:w="119"/><text x="22.7091%" y="223.50"></text></g><g><title>[libwayland-client.so.0.22.0] (501 samples, 0.28%)</title><rect x="22.2450%" y="245" width="0.2838%" height="15" fill="rgb(246,168,33)" fg:x="39270" fg:w="501"/><text x="22.4950%" y="255.50"></text></g><g><title>__libc_calloc (213 samples, 0.12%)</title><rect x="22.5288%" y="245" width="0.1207%" height="15" fill="rgb(231,114,1)" fg:x="39771" fg:w="213"/><text x="22.7788%" y="255.50"></text></g><g><title>[libc.so.6] (110 samples, 0.06%)</title><rect x="22.5872%" y="229" width="0.0623%" height="15" fill="rgb(207,184,53)" fg:x="39874" fg:w="110"/><text x="22.8372%" y="239.50"></text></g><g><title>cfree (151 samples, 0.09%)</title><rect x="22.6495%" y="245" width="0.0855%" height="15" fill="rgb(224,95,51)" fg:x="39984" fg:w="151"/><text x="22.8995%" y="255.50"></text></g><g><title>[libc.so.6] (129 samples, 0.07%)</title><rect x="22.6619%" y="229" width="0.0731%" height="15" fill="rgb(212,188,45)" fg:x="40006" fg:w="129"/><text x="22.9119%" y="239.50"></text></g><g><title>[libEGL_mesa.so.0.0.0] (10,642 samples, 6.03%)</title><rect x="16.7333%" y="293" width="6.0283%" height="15" fill="rgb(223,154,38)" fg:x="29540" fg:w="10642"/><text x="16.9833%" y="303.50">[libEGL_..</text></g><g><title>wl_proxy_marshal_flags (1,426 samples, 0.81%)</title><rect x="21.9538%" y="277" width="0.8078%" height="15" fill="rgb(251,22,52)" fg:x="38756" fg:w="1426"/><text x="22.2038%" y="287.50"></text></g><g><title>wl_proxy_marshal_array_flags (1,247 samples, 0.71%)</title><rect x="22.0552%" y="261" width="0.7064%" height="15" fill="rgb(229,209,22)" fg:x="38935" fg:w="1247"/><text x="22.3052%" y="271.50"></text></g><g><title>pthread_mutex_lock (47 samples, 0.03%)</title><rect x="22.7350%" y="245" width="0.0266%" height="15" fill="rgb(234,138,34)" fg:x="40135" fg:w="47"/><text x="22.9850%" y="255.50"></text></g><g><title>[libEGL_mesa.so.0.0.0] (10,845 samples, 6.14%)</title><rect x="16.6285%" y="309" width="6.1433%" height="15" fill="rgb(212,95,11)" fg:x="29355" fg:w="10845"/><text x="16.8785%" y="319.50">[libEGL_..</text></g><g><title>pthread_rwlock_rdlock (18 samples, 0.01%)</title><rect x="22.7616%" y="293" width="0.0102%" height="15" fill="rgb(240,179,47)" fg:x="40182" fg:w="18"/><text x="23.0116%" y="303.50"></text></g><g><title>[libEGL_mesa.so.0.0.0] (10,978 samples, 6.22%)</title><rect x="16.5668%" y="325" width="6.2186%" height="15" fill="rgb(240,163,11)" fg:x="29246" fg:w="10978"/><text x="16.8168%" y="335.50">[libEGL_..</text></g><g><title>pthread_rwlock_unlock (24 samples, 0.01%)</title><rect x="22.7718%" y="309" width="0.0136%" height="15" fill="rgb(236,37,12)" fg:x="40200" fg:w="24"/><text x="23.0218%" y="319.50"></text></g><g><title>[libEGL.so.1.1.0] (18 samples, 0.01%)</title><rect x="22.8930%" y="277" width="0.0102%" height="15" fill="rgb(232,164,16)" fg:x="40414" fg:w="18"/><text x="23.1430%" y="287.50"></text></g><g><title>[libc.so.6] (22 samples, 0.01%)</title><rect x="22.9032%" y="277" width="0.0125%" height="15" fill="rgb(244,205,15)" fg:x="40432" fg:w="22"/><text x="23.1532%" y="287.50"></text></g><g><title>pthread_mutex_lock (33 samples, 0.02%)</title><rect x="22.9219%" y="277" width="0.0187%" height="15" fill="rgb(223,117,47)" fg:x="40465" fg:w="33"/><text x="23.1719%" y="287.50"></text></g><g><title>[libEGL.so.1.1.0] (251 samples, 0.14%)</title><rect x="22.7996%" y="309" width="0.1422%" height="15" fill="rgb(244,107,35)" fg:x="40249" fg:w="251"/><text x="23.0496%" y="319.50"></text></g><g><title>[libEGL.so.1.1.0] (232 samples, 0.13%)</title><rect x="22.8103%" y="293" width="0.1314%" height="15" fill="rgb(205,140,8)" fg:x="40268" fg:w="232"/><text x="23.0603%" y="303.50"></text></g><g><title>eglSwapBuffers (297 samples, 0.17%)</title><rect x="22.7854%" y="325" width="0.1682%" height="15" fill="rgb(228,84,46)" fg:x="40224" fg:w="297"/><text x="23.0354%" y="335.50"></text></g><g><title>[libEGL.so.1.1.0] (33 samples, 0.02%)</title><rect x="23.0171%" y="277" width="0.0187%" height="15" fill="rgb(254,188,9)" fg:x="40633" fg:w="33"/><text x="23.2671%" y="287.50"></text></g><g><title>__getpid (23 samples, 0.01%)</title><rect x="23.0358%" y="277" width="0.0130%" height="15" fill="rgb(206,112,54)" fg:x="40666" fg:w="23"/><text x="23.2858%" y="287.50"></text></g><g><title>[libEGL.so.1.1.0] (164 samples, 0.09%)</title><rect x="22.9763%" y="293" width="0.0929%" height="15" fill="rgb(216,84,49)" fg:x="40561" fg:w="164"/><text x="23.2263%" y="303.50"></text></g><g><title>pthread_getspecific (36 samples, 0.02%)</title><rect x="23.0488%" y="277" width="0.0204%" height="15" fill="rgb(214,194,35)" fg:x="40689" fg:w="36"/><text x="23.2988%" y="287.50"></text></g><g><title>[libc.so.6] (19 samples, 0.01%)</title><rect x="23.0692%" y="293" width="0.0108%" height="15" fill="rgb(249,28,3)" fg:x="40725" fg:w="19"/><text x="23.3192%" y="303.50"></text></g><g><title>pthread_equal (18 samples, 0.01%)</title><rect x="23.1174%" y="261" width="0.0102%" height="15" fill="rgb(222,56,52)" fg:x="40810" fg:w="18"/><text x="23.3674%" y="271.50"></text></g><g><title>[libGLdispatch.so.0.0.0] (47 samples, 0.03%)</title><rect x="23.1043%" y="277" width="0.0266%" height="15" fill="rgb(245,217,50)" fg:x="40787" fg:w="47"/><text x="23.3543%" y="287.50"></text></g><g><title>__glDispatchCheckMultithreaded (109 samples, 0.06%)</title><rect x="23.0800%" y="293" width="0.0617%" height="15" fill="rgb(213,201,24)" fg:x="40744" fg:w="109"/><text x="23.3300%" y="303.50"></text></g><g><title>pthread_mutex_lock (19 samples, 0.01%)</title><rect x="23.1310%" y="277" width="0.0108%" height="15" fill="rgb(248,116,28)" fg:x="40834" fg:w="19"/><text x="23.3810%" y="287.50"></text></g><g><title>eglQueryAPI (327 samples, 0.19%)</title><rect x="22.9599%" y="309" width="0.1852%" height="15" fill="rgb(219,72,43)" fg:x="40532" fg:w="327"/><text x="23.2099%" y="319.50"></text></g><g><title>&lt;glutin::surface::Surface&lt;T&gt; as glutin::surface::GlSurface&lt;T&gt;&gt;::swap_buffers (11,679 samples, 6.62%)</title><rect x="16.5300%" y="341" width="6.6157%" height="15" fill="rgb(209,138,14)" fg:x="29181" fg:w="11679"/><text x="16.7800%" y="351.50">&lt;glutin::..</text></g><g><title>glutin::api::egl::context::ContextInner::bind_api (339 samples, 0.19%)</title><rect x="22.9537%" y="325" width="0.1920%" height="15" fill="rgb(222,18,33)" fg:x="40521" fg:w="339"/><text x="23.2037%" y="335.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (24 samples, 0.01%)</title><rect x="23.1457%" y="341" width="0.0136%" height="15" fill="rgb(213,199,7)" fg:x="40860" fg:w="24"/><text x="23.3957%" y="351.50"></text></g><g><title>[iris_dri.so] (178 samples, 0.10%)</title><rect x="23.8798%" y="229" width="0.1008%" height="15" fill="rgb(250,110,10)" fg:x="42156" fg:w="178"/><text x="24.1298%" y="239.50"></text></g><g><title>[iris_dri.so] (33 samples, 0.02%)</title><rect x="23.9620%" y="213" width="0.0187%" height="15" fill="rgb(248,123,6)" fg:x="42301" fg:w="33"/><text x="24.2120%" y="223.50"></text></g><g><title>[libEGL_mesa.so.0.0.0] (182 samples, 0.10%)</title><rect x="23.9806%" y="229" width="0.1031%" height="15" fill="rgb(206,91,31)" fg:x="42334" fg:w="182"/><text x="24.2306%" y="239.50"></text></g><g><title>[libEGL_mesa.so.0.0.0] (156 samples, 0.09%)</title><rect x="23.9954%" y="213" width="0.0884%" height="15" fill="rgb(211,154,13)" fg:x="42360" fg:w="156"/><text x="24.2454%" y="223.50"></text></g><g><title>wl_display_dispatch_queue_pending (39 samples, 0.02%)</title><rect x="24.0617%" y="197" width="0.0221%" height="15" fill="rgb(225,148,7)" fg:x="42477" fg:w="39"/><text x="24.3117%" y="207.50"></text></g><g><title>__libc_calloc (102 samples, 0.06%)</title><rect x="24.0877%" y="229" width="0.0578%" height="15" fill="rgb(220,160,43)" fg:x="42523" fg:w="102"/><text x="24.3377%" y="239.50"></text></g><g><title>[libc.so.6] (76 samples, 0.04%)</title><rect x="24.1024%" y="213" width="0.0431%" height="15" fill="rgb(213,52,39)" fg:x="42549" fg:w="76"/><text x="24.3524%" y="223.50"></text></g><g><title>__popcountdi2 (20 samples, 0.01%)</title><rect x="24.1455%" y="229" width="0.0113%" height="15" fill="rgb(243,137,7)" fg:x="42625" fg:w="20"/><text x="24.3955%" y="239.50"></text></g><g><title>[iris_dri.so] (682 samples, 0.39%)</title><rect x="23.7739%" y="245" width="0.3863%" height="15" fill="rgb(230,79,13)" fg:x="41969" fg:w="682"/><text x="24.0239%" y="255.50"></text></g><g><title>[iris_dri.so] (1,319 samples, 0.75%)</title><rect x="23.4674%" y="277" width="0.7472%" height="15" fill="rgb(247,105,23)" fg:x="41428" fg:w="1319"/><text x="23.7174%" y="287.50"></text></g><g><title>[iris_dri.so] (1,083 samples, 0.61%)</title><rect x="23.6011%" y="261" width="0.6135%" height="15" fill="rgb(223,179,41)" fg:x="41664" fg:w="1083"/><text x="23.8511%" y="271.50"></text></g><g><title>__libc_calloc (90 samples, 0.05%)</title><rect x="24.1636%" y="245" width="0.0510%" height="15" fill="rgb(218,9,34)" fg:x="42657" fg:w="90"/><text x="24.4136%" y="255.50"></text></g><g><title>[libc.so.6] (58 samples, 0.03%)</title><rect x="24.1817%" y="229" width="0.0329%" height="15" fill="rgb(222,106,8)" fg:x="42689" fg:w="58"/><text x="24.4317%" y="239.50"></text></g><g><title>[iris_dri.so] (1,597 samples, 0.90%)</title><rect x="23.3145%" y="309" width="0.9046%" height="15" fill="rgb(211,220,0)" fg:x="41158" fg:w="1597"/><text x="23.5645%" y="319.50"></text></g><g><title>[iris_dri.so] (1,453 samples, 0.82%)</title><rect x="23.3961%" y="293" width="0.8231%" height="15" fill="rgb(229,52,16)" fg:x="41302" fg:w="1453"/><text x="23.6461%" y="303.50"></text></g><g><title>[iris_dri.so] (1,884 samples, 1.07%)</title><rect x="23.1593%" y="341" width="1.0672%" height="15" fill="rgb(212,155,18)" fg:x="40884" fg:w="1884"/><text x="23.4093%" y="351.50"></text></g><g><title>[iris_dri.so] (1,742 samples, 0.99%)</title><rect x="23.2397%" y="325" width="0.9868%" height="15" fill="rgb(242,21,14)" fg:x="41026" fg:w="1742"/><text x="23.4897%" y="335.50"></text></g><g><title>cfree (34 samples, 0.02%)</title><rect x="24.2265%" y="341" width="0.0193%" height="15" fill="rgb(222,19,48)" fg:x="42768" fg:w="34"/><text x="24.4765%" y="351.50"></text></g><g><title>[libc.so.6] (28 samples, 0.02%)</title><rect x="24.2299%" y="325" width="0.0159%" height="15" fill="rgb(232,45,27)" fg:x="42774" fg:w="28"/><text x="24.4799%" y="335.50"></text></g><g><title>eframe::epi::App::clear_color (164 samples, 0.09%)</title><rect x="24.2469%" y="341" width="0.0929%" height="15" fill="rgb(249,103,42)" fg:x="42804" fg:w="164"/><text x="24.4969%" y="351.50"></text></g><g><title>ecolor::color32::Color32::from_rgba_unmultiplied (164 samples, 0.09%)</title><rect x="24.2469%" y="325" width="0.0929%" height="15" fill="rgb(246,81,33)" fg:x="42804" fg:w="164"/><text x="24.4969%" y="335.50"></text></g><g><title>[libm.so.6] (116 samples, 0.07%)</title><rect x="24.2741%" y="309" width="0.0657%" height="15" fill="rgb(252,33,42)" fg:x="42852" fg:w="116"/><text x="24.5241%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;egui::ui::Ui&gt; (40 samples, 0.02%)</title><rect x="24.4831%" y="293" width="0.0227%" height="15" fill="rgb(209,212,41)" fg:x="43221" fg:w="40"/><text x="24.7331%" y="303.50"></text></g><g><title>egui::containers::frame::Frame::central_panel (19 samples, 0.01%)</title><rect x="24.5058%" y="293" width="0.0108%" height="15" fill="rgb(207,154,6)" fg:x="43261" fg:w="19"/><text x="24.7558%" y="303.50"></text></g><g><title>[libc.so.6] (40 samples, 0.02%)</title><rect x="24.5256%" y="277" width="0.0227%" height="15" fill="rgb(223,64,47)" fg:x="43296" fg:w="40"/><text x="24.7756%" y="287.50"></text></g><g><title>cfree (26 samples, 0.01%)</title><rect x="24.5499%" y="277" width="0.0147%" height="15" fill="rgb(211,161,38)" fg:x="43339" fg:w="26"/><text x="24.7999%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,422 samples, 1.94%)</title><rect x="24.6151%" y="261" width="1.9384%" height="15" fill="rgb(219,138,40)" fg:x="43454" fg:w="3422"/><text x="24.8651%" y="271.50">&lt;..</text></g><g><title>malloc (91 samples, 0.05%)</title><rect x="26.5020%" y="245" width="0.0515%" height="15" fill="rgb(241,228,46)" fg:x="46785" fg:w="91"/><text x="26.7520%" y="255.50"></text></g><g><title>[libc.so.6] (48 samples, 0.03%)</title><rect x="26.5263%" y="229" width="0.0272%" height="15" fill="rgb(223,209,38)" fg:x="46828" fg:w="48"/><text x="26.7763%" y="239.50"></text></g><g><title>malloc (24 samples, 0.01%)</title><rect x="30.9147%" y="213" width="0.0136%" height="15" fill="rgb(236,164,45)" fg:x="54575" fg:w="24"/><text x="31.1647%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1,020 samples, 0.58%)</title><rect x="30.8830%" y="245" width="0.5778%" height="15" fill="rgb(231,15,5)" fg:x="54519" fg:w="1020"/><text x="31.1330%" y="255.50"></text></g><g><title>alloc::raw_vec::finish_grow (992 samples, 0.56%)</title><rect x="30.8989%" y="229" width="0.5619%" height="15" fill="rgb(252,35,15)" fg:x="54547" fg:w="992"/><text x="31.1489%" y="239.50"></text></g><g><title>realloc (940 samples, 0.53%)</title><rect x="30.9283%" y="213" width="0.5325%" height="15" fill="rgb(248,181,18)" fg:x="54599" fg:w="940"/><text x="31.1783%" y="223.50"></text></g><g><title>[libc.so.6] (754 samples, 0.43%)</title><rect x="31.0337%" y="197" width="0.4271%" height="15" fill="rgb(233,39,42)" fg:x="54785" fg:w="754"/><text x="31.2837%" y="207.50"></text></g><g><title>[libc.so.6] (709 samples, 0.40%)</title><rect x="31.0592%" y="181" width="0.4016%" height="15" fill="rgb(238,110,33)" fg:x="54830" fg:w="709"/><text x="31.3092%" y="191.50"></text></g><g><title>[libc.so.6] (134 samples, 0.08%)</title><rect x="31.3849%" y="165" width="0.0759%" height="15" fill="rgb(233,195,10)" fg:x="55405" fg:w="134"/><text x="31.6349%" y="175.50"></text></g><g><title>egui::placer::Placer::available_size (5,962 samples, 3.38%)</title><rect x="31.4648%" y="245" width="3.3773%" height="15" fill="rgb(254,105,3)" fg:x="55546" fg:w="5962"/><text x="31.7148%" y="255.50">egu..</text></g><g><title>egui::ui::Ui::available_size (379 samples, 0.21%)</title><rect x="34.8420%" y="245" width="0.2147%" height="15" fill="rgb(221,225,9)" fg:x="61508" fg:w="379"/><text x="35.0920%" y="255.50"></text></g><g><title>&lt;sortingvisualizer::app::MyApp as eframe::epi::App&gt;::update::convert_array (15,012 samples, 8.50%)</title><rect x="26.5535%" y="261" width="8.5037%" height="15" fill="rgb(224,227,45)" fg:x="46876" fg:w="15012"/><text x="26.8035%" y="271.50">&lt;sortingvisu..</text></g><g><title>&lt;sortingvisualizer::sorts::exchange::bubble_sort::BubbleSort as sortingvisualizer::sorts::algorithm::Algorithm&gt;::step (28 samples, 0.02%)</title><rect x="35.0573%" y="261" width="0.0159%" height="15" fill="rgb(229,198,43)" fg:x="61888" fg:w="28"/><text x="35.3073%" y="271.50"></text></g><g><title>cfree (39 samples, 0.02%)</title><rect x="35.0731%" y="261" width="0.0221%" height="15" fill="rgb(206,209,35)" fg:x="61916" fg:w="39"/><text x="35.3231%" y="271.50"></text></g><g><title>[libc.so.6] (34 samples, 0.02%)</title><rect x="35.0760%" y="245" width="0.0193%" height="15" fill="rgb(245,195,53)" fg:x="61921" fg:w="34"/><text x="35.3260%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;epaint::shape::Shape&gt; (402 samples, 0.23%)</title><rect x="35.0952%" y="261" width="0.2277%" height="15" fill="rgb(240,92,26)" fg:x="61955" fg:w="402"/><text x="35.3452%" y="271.50"></text></g><g><title>[libc.so.6] (32 samples, 0.02%)</title><rect x="35.3779%" y="181" width="0.0181%" height="15" fill="rgb(207,40,23)" fg:x="62454" fg:w="32"/><text x="35.6279%" y="191.50"></text></g><g><title>calloop::sources::ping::eventfd::Ping::ping (55 samples, 0.03%)</title><rect x="35.3683%" y="229" width="0.0312%" height="15" fill="rgb(223,111,35)" fg:x="62437" fg:w="55"/><text x="35.6183%" y="239.50"></text></g><g><title>nix::unistd::write (53 samples, 0.03%)</title><rect x="35.3694%" y="213" width="0.0300%" height="15" fill="rgb(229,147,28)" fg:x="62439" fg:w="53"/><text x="35.6194%" y="223.50"></text></g><g><title>write (52 samples, 0.03%)</title><rect x="35.3700%" y="197" width="0.0295%" height="15" fill="rgb(211,29,28)" fg:x="62440" fg:w="52"/><text x="35.6200%" y="207.50"></text></g><g><title>std::sync::mpsc::Sender&lt;T&gt;::send (79 samples, 0.04%)</title><rect x="35.3994%" y="229" width="0.0448%" height="15" fill="rgb(228,72,33)" fg:x="62492" fg:w="79"/><text x="35.6494%" y="239.50"></text></g><g><title>std::sync::mpsc::shared::Packet&lt;T&gt;::send (62 samples, 0.04%)</title><rect x="35.4090%" y="213" width="0.0351%" height="15" fill="rgb(205,214,31)" fg:x="62509" fg:w="62"/><text x="35.6590%" y="223.50"></text></g><g><title>malloc (21 samples, 0.01%)</title><rect x="35.4323%" y="197" width="0.0119%" height="15" fill="rgb(224,111,15)" fg:x="62550" fg:w="21"/><text x="35.6823%" y="207.50"></text></g><g><title>egui::context::Context::request_repaint (250 samples, 0.14%)</title><rect x="35.3229%" y="261" width="0.1416%" height="15" fill="rgb(253,21,26)" fg:x="62357" fg:w="250"/><text x="35.5729%" y="271.50"></text></g><g><title>eframe::native::run::glow_integration::GlowWinitApp::init_run_state::{{closure}} (219 samples, 0.12%)</title><rect x="35.3405%" y="245" width="0.1241%" height="15" fill="rgb(245,139,43)" fg:x="62388" fg:w="219"/><text x="35.5905%" y="255.50"></text></g><g><title>std::time::Instant::now (36 samples, 0.02%)</title><rect x="35.4442%" y="229" width="0.0204%" height="15" fill="rgb(252,170,7)" fg:x="62571" fg:w="36"/><text x="35.6942%" y="239.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (36 samples, 0.02%)</title><rect x="35.4442%" y="213" width="0.0204%" height="15" fill="rgb(231,118,14)" fg:x="62571" fg:w="36"/><text x="35.6942%" y="223.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (36 samples, 0.02%)</title><rect x="35.4442%" y="197" width="0.0204%" height="15" fill="rgb(238,83,0)" fg:x="62571" fg:w="36"/><text x="35.6942%" y="207.50"></text></g><g><title>clock_gettime (35 samples, 0.02%)</title><rect x="35.4447%" y="181" width="0.0198%" height="15" fill="rgb(221,39,39)" fg:x="62572" fg:w="35"/><text x="35.6947%" y="191.50"></text></g><g><title>__vdso_clock_gettime (29 samples, 0.02%)</title><rect x="35.4481%" y="165" width="0.0164%" height="15" fill="rgb(222,119,46)" fg:x="62578" fg:w="29"/><text x="35.6981%" y="175.50"></text></g><g><title>egui::layers::GraphicLayers::list (22 samples, 0.01%)</title><rect x="35.4917%" y="229" width="0.0125%" height="15" fill="rgb(222,165,49)" fg:x="62655" fg:w="22"/><text x="35.7417%" y="239.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (22,217 samples, 12.59%)</title><rect x="24.5647%" y="277" width="12.5851%" height="15" fill="rgb(219,113,52)" fg:x="43365" fg:w="22217"/><text x="24.8147%" y="287.50">core::ops::function..</text></g><g><title>egui::painter::Painter::extend (2,975 samples, 1.69%)</title><rect x="35.4646%" y="261" width="1.6852%" height="15" fill="rgb(214,7,15)" fg:x="62607" fg:w="2975"/><text x="35.7146%" y="271.50"></text></g><g><title>egui::context::Context::write (2,964 samples, 1.68%)</title><rect x="35.4708%" y="245" width="1.6790%" height="15" fill="rgb(235,32,4)" fg:x="62618" fg:w="2964"/><text x="35.7208%" y="255.50"></text></g><g><title>egui::layers::PaintList::extend (2,905 samples, 1.65%)</title><rect x="35.5042%" y="229" width="1.6456%" height="15" fill="rgb(238,90,54)" fg:x="62677" fg:w="2905"/><text x="35.7542%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2,905 samples, 1.65%)</title><rect x="35.5042%" y="213" width="1.6456%" height="15" fill="rgb(213,208,19)" fg:x="62677" fg:w="2905"/><text x="35.7542%" y="223.50"></text></g><g><title>cfree (48 samples, 0.03%)</title><rect x="37.1226%" y="197" width="0.0272%" height="15" fill="rgb(233,156,4)" fg:x="65534" fg:w="48"/><text x="37.3726%" y="207.50"></text></g><g><title>[libc.so.6] (30 samples, 0.02%)</title><rect x="37.1328%" y="181" width="0.0170%" height="15" fill="rgb(207,194,5)" fg:x="65552" fg:w="30"/><text x="37.3828%" y="191.50"></text></g><g><title>egui::painter::Painter::add (91 samples, 0.05%)</title><rect x="37.1628%" y="261" width="0.0515%" height="15" fill="rgb(206,111,30)" fg:x="65605" fg:w="91"/><text x="37.4128%" y="271.50"></text></g><g><title>egui::context::Context::write (73 samples, 0.04%)</title><rect x="37.1730%" y="245" width="0.0414%" height="15" fill="rgb(243,70,54)" fg:x="65623" fg:w="73"/><text x="37.4230%" y="255.50"></text></g><g><title>egui::layers::GraphicLayers::list (18 samples, 0.01%)</title><rect x="37.2042%" y="229" width="0.0102%" height="15" fill="rgb(242,28,8)" fg:x="65678" fg:w="18"/><text x="37.4542%" y="239.50"></text></g><g><title>egui::containers::frame::Frame::begin (173 samples, 0.10%)</title><rect x="37.1498%" y="277" width="0.0980%" height="15" fill="rgb(219,106,18)" fg:x="65582" fg:w="173"/><text x="37.3998%" y="287.50"></text></g><g><title>egui::ui::Ui::child_ui (59 samples, 0.03%)</title><rect x="37.2144%" y="261" width="0.0334%" height="15" fill="rgb(244,222,10)" fg:x="65696" fg:w="59"/><text x="37.4644%" y="271.50"></text></g><g><title>egui::placer::Placer::new (27 samples, 0.02%)</title><rect x="37.2325%" y="245" width="0.0153%" height="15" fill="rgb(236,179,52)" fg:x="65728" fg:w="27"/><text x="37.4825%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;egui::ui::Ui&gt; (40 samples, 0.02%)</title><rect x="37.2648%" y="261" width="0.0227%" height="15" fill="rgb(213,23,39)" fg:x="65785" fg:w="40"/><text x="37.5148%" y="271.50"></text></g><g><title>egui::context::Context::interact_with_hovered (64 samples, 0.04%)</title><rect x="37.3197%" y="245" width="0.0363%" height="15" fill="rgb(238,48,10)" fg:x="65882" fg:w="64"/><text x="37.5697%" y="255.50"></text></g><g><title>egui::context::Context::rect_contains_pointer (180 samples, 0.10%)</title><rect x="37.3560%" y="245" width="0.1020%" height="15" fill="rgb(251,196,23)" fg:x="65946" fg:w="180"/><text x="37.6060%" y="255.50"></text></g><g><title>egui::context::Context::layer_id_at (157 samples, 0.09%)</title><rect x="37.3690%" y="229" width="0.0889%" height="15" fill="rgb(250,152,24)" fg:x="65969" fg:w="157"/><text x="37.6190%" y="239.50"></text></g><g><title>egui::memory::Memory::layer_id_at (144 samples, 0.08%)</title><rect x="37.3764%" y="213" width="0.0816%" height="15" fill="rgb(209,150,17)" fg:x="65982" fg:w="144"/><text x="37.6264%" y="223.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (90 samples, 0.05%)</title><rect x="37.4070%" y="197" width="0.0510%" height="15" fill="rgb(234,202,34)" fg:x="66036" fg:w="90"/><text x="37.6570%" y="207.50"></text></g><g><title>egui::context::Context::interact (294 samples, 0.17%)</title><rect x="37.2959%" y="261" width="0.1665%" height="15" fill="rgb(253,148,53)" fg:x="65840" fg:w="294"/><text x="37.5459%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;epaint::shape::Shape&gt; (33 samples, 0.02%)</title><rect x="37.4908%" y="229" width="0.0187%" height="15" fill="rgb(218,129,16)" fg:x="66184" fg:w="33"/><text x="37.7408%" y="239.50"></text></g><g><title>egui::painter::Painter::set (94 samples, 0.05%)</title><rect x="37.4625%" y="261" width="0.0532%" height="15" fill="rgb(216,85,19)" fg:x="66134" fg:w="94"/><text x="37.7125%" y="271.50"></text></g><g><title>egui::context::Context::write (78 samples, 0.04%)</title><rect x="37.4715%" y="245" width="0.0442%" height="15" fill="rgb(235,228,7)" fg:x="66150" fg:w="78"/><text x="37.7215%" y="255.50"></text></g><g><title>egui::containers::frame::Prepared::end (545 samples, 0.31%)</title><rect x="37.2478%" y="277" width="0.3087%" height="15" fill="rgb(245,175,0)" fg:x="65755" fg:w="545"/><text x="37.4978%" y="287.50"></text></g><g><title>egui::ui::Ui::advance_cursor_after_rect (72 samples, 0.04%)</title><rect x="37.5157%" y="261" width="0.0408%" height="15" fill="rgb(208,168,36)" fg:x="66228" fg:w="72"/><text x="37.7657%" y="271.50"></text></g><g><title>egui::placer::Placer::advance_after_rects (52 samples, 0.03%)</title><rect x="37.5270%" y="245" width="0.0295%" height="15" fill="rgb(246,171,24)" fg:x="66248" fg:w="52"/><text x="37.7770%" y="255.50"></text></g><g><title>egui::containers::frame::Frame::show (23,055 samples, 13.06%)</title><rect x="24.5165%" y="293" width="13.0598%" height="15" fill="rgb(215,142,24)" fg:x="43280" fg:w="23055"/><text x="24.7665%" y="303.50">egui::containers::fr..</text></g><g><title>egui::frame_state::FrameState::allocate_central_panel (21 samples, 0.01%)</title><rect x="37.5911%" y="293" width="0.0119%" height="15" fill="rgb(250,187,7)" fg:x="66361" fg:w="21"/><text x="37.8411%" y="303.50"></text></g><g><title>egui::id::Id::new (24 samples, 0.01%)</title><rect x="37.6030%" y="293" width="0.0136%" height="15" fill="rgb(228,66,33)" fg:x="66382" fg:w="24"/><text x="37.8530%" y="303.50"></text></g><g><title>egui::ui::Ui::available_rect_before_wrap (30 samples, 0.02%)</title><rect x="37.6194%" y="293" width="0.0170%" height="15" fill="rgb(234,215,21)" fg:x="66411" fg:w="30"/><text x="37.8694%" y="303.50"></text></g><g><title>egui::layout::Layout::available_rect_before_wrap (28 samples, 0.02%)</title><rect x="37.6205%" y="277" width="0.0159%" height="15" fill="rgb(222,191,20)" fg:x="66413" fg:w="28"/><text x="37.8705%" y="287.50"></text></g><g><title>egui::id::Id::with (21 samples, 0.01%)</title><rect x="37.6517%" y="277" width="0.0119%" height="15" fill="rgb(245,79,54)" fg:x="66468" fg:w="21"/><text x="37.9017%" y="287.50"></text></g><g><title>egui::ui::Ui::child_ui (92 samples, 0.05%)</title><rect x="37.6364%" y="293" width="0.0521%" height="15" fill="rgb(240,10,37)" fg:x="66441" fg:w="92"/><text x="37.8864%" y="303.50"></text></g><g><title>egui::placer::Placer::new (44 samples, 0.02%)</title><rect x="37.6636%" y="277" width="0.0249%" height="15" fill="rgb(214,192,32)" fg:x="66489" fg:w="44"/><text x="37.9136%" y="287.50"></text></g><g><title>egui::layout::Layout::next_frame_ignore_wrap (69 samples, 0.04%)</title><rect x="37.7293%" y="277" width="0.0391%" height="15" fill="rgb(209,36,54)" fg:x="66605" fg:w="69"/><text x="37.9793%" y="287.50"></text></g><g><title>egui::ui::Ui::new (157 samples, 0.09%)</title><rect x="37.6885%" y="293" width="0.0889%" height="15" fill="rgb(220,10,11)" fg:x="66533" fg:w="157"/><text x="37.9385%" y="303.50"></text></g><g><title>&lt;sortingvisualizer::app::MyApp as eframe::epi::App&gt;::update (23,558 samples, 13.34%)</title><rect x="24.4491%" y="325" width="13.3447%" height="15" fill="rgb(221,106,17)" fg:x="43161" fg:w="23558"/><text x="24.6991%" y="335.50">&lt;sortingvisualizer::..</text></g><g><title>egui::containers::panel::CentralPanel::show (23,551 samples, 13.34%)</title><rect x="24.4531%" y="309" width="13.3408%" height="15" fill="rgb(251,142,44)" fg:x="43168" fg:w="23551"/><text x="24.7031%" y="319.50">egui::containers::pa..</text></g><g><title>malloc (29 samples, 0.02%)</title><rect x="37.7774%" y="293" width="0.0164%" height="15" fill="rgb(238,13,15)" fg:x="66690" fg:w="29"/><text x="38.0274%" y="303.50"></text></g><g><title>[libc.so.6] (50 samples, 0.03%)</title><rect x="37.7939%" y="325" width="0.0283%" height="15" fill="rgb(208,107,27)" fg:x="66719" fg:w="50"/><text x="38.0439%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;wayland_client::imp::proxy::ProxyInner&gt; (23 samples, 0.01%)</title><rect x="37.8811%" y="309" width="0.0130%" height="15" fill="rgb(205,136,37)" fg:x="66873" fg:w="23"/><text x="38.1311%" y="319.50"></text></g><g><title>smithay_client_toolkit::output::with_output_info (40 samples, 0.02%)</title><rect x="37.8941%" y="309" width="0.0227%" height="15" fill="rgb(250,205,27)" fg:x="66896" fg:w="40"/><text x="38.1441%" y="319.50"></text></g><g><title>&lt;wayland_client::imp::proxy::ProxyInner as core::clone::Clone&gt;::clone (38 samples, 0.02%)</title><rect x="37.9247%" y="293" width="0.0215%" height="15" fill="rgb(210,80,43)" fg:x="66950" fg:w="38"/><text x="38.1747%" y="303.50"></text></g><g><title>&lt;wayland_client::imp::proxy::ProxyInner as core::clone::Clone&gt;::clone (75 samples, 0.04%)</title><rect x="38.0153%" y="245" width="0.0425%" height="15" fill="rgb(247,160,36)" fg:x="67110" fg:w="75"/><text x="38.2653%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (122 samples, 0.07%)</title><rect x="37.9932%" y="261" width="0.0691%" height="15" fill="rgb(234,13,49)" fg:x="67071" fg:w="122"/><text x="38.2432%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (167 samples, 0.09%)</title><rect x="37.9898%" y="277" width="0.0946%" height="15" fill="rgb(234,122,0)" fg:x="67065" fg:w="167"/><text x="38.2398%" y="287.50"></text></g><g><title>malloc (29 samples, 0.02%)</title><rect x="38.0680%" y="261" width="0.0164%" height="15" fill="rgb(207,146,38)" fg:x="67203" fg:w="29"/><text x="38.3180%" y="271.50"></text></g><g><title>winit::platform_impl::platform::wayland::window::Window::current_monitor (322 samples, 0.18%)</title><rect x="37.9168%" y="309" width="0.1824%" height="15" fill="rgb(207,177,25)" fg:x="66936" fg:w="322"/><text x="38.1668%" y="319.50"></text></g><g><title>smithay_client_toolkit::surface::get_surface_outputs (234 samples, 0.13%)</title><rect x="37.9666%" y="293" width="0.1326%" height="15" fill="rgb(211,178,42)" fg:x="67024" fg:w="234"/><text x="38.2166%" y="303.50"></text></g><g><title>wayland_commons::user_data::UserData::get (21 samples, 0.01%)</title><rect x="38.0873%" y="277" width="0.0119%" height="15" fill="rgb(230,69,54)" fg:x="67237" fg:w="21"/><text x="38.3373%" y="287.50"></text></g><g><title>eframe::native::epi_integration::read_window_info (531 samples, 0.30%)</title><rect x="37.8222%" y="325" width="0.3008%" height="15" fill="rgb(214,135,41)" fg:x="66769" fg:w="531"/><text x="38.0722%" y="335.50"></text></g><g><title>winit::platform_impl::platform::wayland::window::Window::inner_size (42 samples, 0.02%)</title><rect x="38.0992%" y="309" width="0.0238%" height="15" fill="rgb(237,67,25)" fg:x="67258" fg:w="42"/><text x="38.3492%" y="319.50"></text></g><g><title>&lt;ahash::random_state::DefaultRandomSource as ahash::random_state::RandomSource&gt;::gen_hasher_seed (28 samples, 0.02%)</title><rect x="38.2051%" y="309" width="0.0159%" height="15" fill="rgb(222,189,50)" fg:x="67445" fg:w="28"/><text x="38.4551%" y="319.50"></text></g><g><title>&lt;egui::input_state::InputState as core::default::Default&gt;::default (79 samples, 0.04%)</title><rect x="38.2210%" y="309" width="0.0448%" height="15" fill="rgb(245,148,34)" fg:x="67473" fg:w="79"/><text x="38.4710%" y="319.50"></text></g><g><title>[libc.so.6] (65 samples, 0.04%)</title><rect x="38.2657%" y="309" width="0.0368%" height="15" fill="rgb(222,29,6)" fg:x="67552" fg:w="65"/><text x="38.5157%" y="319.50"></text></g><g><title>ahash::random_state::RandomState::from_keys (37 samples, 0.02%)</title><rect x="38.3025%" y="309" width="0.0210%" height="15" fill="rgb(221,189,43)" fg:x="67617" fg:w="37"/><text x="38.5525%" y="319.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (22 samples, 0.01%)</title><rect x="38.3235%" y="309" width="0.0125%" height="15" fill="rgb(207,36,27)" fg:x="67654" fg:w="22"/><text x="38.5735%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;egui::data::input::RawInput&gt; (22 samples, 0.01%)</title><rect x="38.3484%" y="293" width="0.0125%" height="15" fill="rgb(217,90,24)" fg:x="67698" fg:w="22"/><text x="38.5984%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;egui::input_state::InputState&gt; (71 samples, 0.04%)</title><rect x="38.3360%" y="309" width="0.0402%" height="15" fill="rgb(224,66,35)" fg:x="67676" fg:w="71"/><text x="38.5860%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;egui::input_state::PointerState&gt; (27 samples, 0.02%)</title><rect x="38.3609%" y="293" width="0.0153%" height="15" fill="rgb(221,13,50)" fg:x="67720" fg:w="27"/><text x="38.6109%" y="303.50"></text></g><g><title>cfree (20 samples, 0.01%)</title><rect x="38.3648%" y="277" width="0.0113%" height="15" fill="rgb(236,68,49)" fg:x="67727" fg:w="20"/><text x="38.6148%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (18 samples, 0.01%)</title><rect x="38.4345%" y="293" width="0.0102%" height="15" fill="rgb(229,146,28)" fg:x="67850" fg:w="18"/><text x="38.6845%" y="303.50"></text></g><g><title>[libc.so.6] (52 samples, 0.03%)</title><rect x="38.4447%" y="293" width="0.0295%" height="15" fill="rgb(225,31,38)" fg:x="67868" fg:w="52"/><text x="38.6947%" y="303.50"></text></g><g><title>egui::input_state::InputState::begin_frame (229 samples, 0.13%)</title><rect x="38.3762%" y="309" width="0.1297%" height="15" fill="rgb(250,208,3)" fg:x="67747" fg:w="229"/><text x="38.6262%" y="319.50"></text></g><g><title>emath::history::History&lt;T&gt;::add (44 samples, 0.02%)</title><rect x="38.4810%" y="293" width="0.0249%" height="15" fill="rgb(246,54,23)" fg:x="67932" fg:w="44"/><text x="38.7310%" y="303.50"></text></g><g><title>egui::memory::Areas::set_state (75 samples, 0.04%)</title><rect x="38.5059%" y="309" width="0.0425%" height="15" fill="rgb(243,76,11)" fg:x="67976" fg:w="75"/><text x="38.7559%" y="319.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (37 samples, 0.02%)</title><rect x="38.5274%" y="293" width="0.0210%" height="15" fill="rgb(245,21,50)" fg:x="68014" fg:w="37"/><text x="38.7774%" y="303.50"></text></g><g><title>egui::memory::Memory::begin_frame (42 samples, 0.02%)</title><rect x="38.5484%" y="309" width="0.0238%" height="15" fill="rgb(228,9,43)" fg:x="68051" fg:w="42"/><text x="38.7984%" y="319.50"></text></g><g><title>epaint::text::font::Font::preload_common_characters (3,189 samples, 1.81%)</title><rect x="38.5722%" y="309" width="1.8065%" height="15" fill="rgb(208,100,47)" fg:x="68093" fg:w="3189"/><text x="38.8222%" y="319.50">e..</text></g><g><title>epaint::text::font::Font::glyph_info (2,862 samples, 1.62%)</title><rect x="38.7574%" y="293" width="1.6212%" height="15" fill="rgb(232,26,8)" fg:x="68420" fg:w="2862"/><text x="39.0074%" y="303.50"></text></g><g><title>epaint::text::fonts::Fonts::begin_frame (60 samples, 0.03%)</title><rect x="40.3786%" y="309" width="0.0340%" height="15" fill="rgb(216,166,38)" fg:x="71282" fg:w="60"/><text x="40.6286%" y="319.50"></text></g><g><title>epaint::text::fonts::FontsImpl::font (159 samples, 0.09%)</title><rect x="40.4143%" y="309" width="0.0901%" height="15" fill="rgb(251,202,51)" fg:x="71345" fg:w="159"/><text x="40.6643%" y="319.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (100 samples, 0.06%)</title><rect x="40.4477%" y="293" width="0.0566%" height="15" fill="rgb(254,216,34)" fg:x="71404" fg:w="100"/><text x="40.6977%" y="303.50"></text></g><g><title>egui::context::Context::begin_frame (4,210 samples, 2.38%)</title><rect x="38.1230%" y="325" width="2.3848%" height="15" fill="rgb(251,32,27)" fg:x="67300" fg:w="4210"/><text x="38.3730%" y="335.50">eg..</text></g><g><title>[libc.so.6] (1,031 samples, 0.58%)</title><rect x="40.6941%" y="293" width="0.5840%" height="15" fill="rgb(208,127,28)" fg:x="71839" fg:w="1031"/><text x="40.9441%" y="303.50"></text></g><g><title>egui::layers::GraphicLayers::drain (1,267 samples, 0.72%)</title><rect x="40.6109%" y="309" width="0.7177%" height="15" fill="rgb(224,137,22)" fg:x="71692" fg:w="1267"/><text x="40.8609%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (89 samples, 0.05%)</title><rect x="41.2782%" y="293" width="0.0504%" height="15" fill="rgb(254,70,32)" fg:x="72870" fg:w="89"/><text x="41.5282%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (82 samples, 0.05%)</title><rect x="41.2821%" y="277" width="0.0464%" height="15" fill="rgb(229,75,37)" fg:x="72877" fg:w="82"/><text x="41.5321%" y="287.50"></text></g><g><title>malloc (71 samples, 0.04%)</title><rect x="41.2884%" y="261" width="0.0402%" height="15" fill="rgb(252,64,23)" fg:x="72888" fg:w="71"/><text x="41.5384%" y="271.50"></text></g><g><title>[libc.so.6] (34 samples, 0.02%)</title><rect x="41.3093%" y="245" width="0.0193%" height="15" fill="rgb(232,162,48)" fg:x="72925" fg:w="34"/><text x="41.5593%" y="255.50"></text></g><g><title>egui::memory::Memory::end_frame (66 samples, 0.04%)</title><rect x="41.3286%" y="309" width="0.0374%" height="15" fill="rgb(246,160,12)" fg:x="72959" fg:w="66"/><text x="41.5786%" y="319.50"></text></g><g><title>alloc::slice::merge_sort (28 samples, 0.02%)</title><rect x="41.3501%" y="293" width="0.0159%" height="15" fill="rgb(247,166,0)" fg:x="72997" fg:w="28"/><text x="41.6001%" y="303.50"></text></g><g><title>epaint::text::fonts::Fonts::font_image_delta (72 samples, 0.04%)</title><rect x="41.3660%" y="309" width="0.0408%" height="15" fill="rgb(249,219,21)" fg:x="73025" fg:w="72"/><text x="41.6160%" y="319.50"></text></g><g><title>epaint::texture_atlas::TextureAtlas::take_delta (19 samples, 0.01%)</title><rect x="41.3960%" y="293" width="0.0108%" height="15" fill="rgb(205,209,3)" fg:x="73078" fg:w="19"/><text x="41.6460%" y="303.50"></text></g><g><title>egui::context::Context::end_frame (1,594 samples, 0.90%)</title><rect x="40.5078%" y="325" width="0.9029%" height="15" fill="rgb(243,44,1)" fg:x="71510" fg:w="1594"/><text x="40.7578%" y="335.50"></text></g><g><title>egui::data::output::PlatformOutput::append (33 samples, 0.02%)</title><rect x="41.4277%" y="309" width="0.0187%" height="15" fill="rgb(206,159,16)" fg:x="73134" fg:w="33"/><text x="41.6777%" y="319.50"></text></g><g><title>egui::data::output::FullOutput::append (106 samples, 0.06%)</title><rect x="41.4107%" y="325" width="0.0600%" height="15" fill="rgb(244,77,30)" fg:x="73104" fg:w="106"/><text x="41.6607%" y="335.50"></text></g><g><title>epaint::textures::TexturesDelta::append (43 samples, 0.02%)</title><rect x="41.4464%" y="309" width="0.0244%" height="15" fill="rgb(218,69,12)" fg:x="73167" fg:w="43"/><text x="41.6964%" y="319.50"></text></g><g><title>egui::data::input::RawInput::take (32 samples, 0.02%)</title><rect x="41.4832%" y="309" width="0.0181%" height="15" fill="rgb(212,87,7)" fg:x="73232" fg:w="32"/><text x="41.7332%" y="319.50"></text></g><g><title>std::time::Instant::elapsed (36 samples, 0.02%)</title><rect x="41.5014%" y="309" width="0.0204%" height="15" fill="rgb(245,114,25)" fg:x="73264" fg:w="36"/><text x="41.7514%" y="319.50"></text></g><g><title>std::time::Instant::now (30 samples, 0.02%)</title><rect x="41.5048%" y="293" width="0.0170%" height="15" fill="rgb(210,61,42)" fg:x="73270" fg:w="30"/><text x="41.7548%" y="303.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (30 samples, 0.02%)</title><rect x="41.5048%" y="277" width="0.0170%" height="15" fill="rgb(211,52,33)" fg:x="73270" fg:w="30"/><text x="41.7548%" y="287.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (30 samples, 0.02%)</title><rect x="41.5048%" y="261" width="0.0170%" height="15" fill="rgb(234,58,33)" fg:x="73270" fg:w="30"/><text x="41.7548%" y="271.50"></text></g><g><title>clock_gettime (24 samples, 0.01%)</title><rect x="41.5082%" y="245" width="0.0136%" height="15" fill="rgb(220,115,36)" fg:x="73276" fg:w="24"/><text x="41.7582%" y="255.50"></text></g><g><title>__vdso_clock_gettime (23 samples, 0.01%)</title><rect x="41.5087%" y="229" width="0.0130%" height="15" fill="rgb(243,153,54)" fg:x="73277" fg:w="23"/><text x="41.7587%" y="239.50"></text></g><g><title>egui_winit::State::take_egui_input (131 samples, 0.07%)</title><rect x="41.4708%" y="325" width="0.0742%" height="15" fill="rgb(251,47,18)" fg:x="73210" fg:w="131"/><text x="41.7208%" y="335.50"></text></g><g><title>winit::platform_impl::platform::wayland::window::Window::inner_size (41 samples, 0.02%)</title><rect x="41.5217%" y="309" width="0.0232%" height="15" fill="rgb(242,102,42)" fg:x="73300" fg:w="41"/><text x="41.7717%" y="319.50"></text></g><g><title>std::time::Instant::elapsed (57 samples, 0.03%)</title><rect x="41.5450%" y="325" width="0.0323%" height="15" fill="rgb(234,31,38)" fg:x="73341" fg:w="57"/><text x="41.7950%" y="335.50"></text></g><g><title>std::time::Instant::now (51 samples, 0.03%)</title><rect x="41.5484%" y="309" width="0.0289%" height="15" fill="rgb(221,117,51)" fg:x="73347" fg:w="51"/><text x="41.7984%" y="319.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (51 samples, 0.03%)</title><rect x="41.5484%" y="293" width="0.0289%" height="15" fill="rgb(212,20,18)" fg:x="73347" fg:w="51"/><text x="41.7984%" y="303.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (51 samples, 0.03%)</title><rect x="41.5484%" y="277" width="0.0289%" height="15" fill="rgb(245,133,36)" fg:x="73347" fg:w="51"/><text x="41.7984%" y="287.50"></text></g><g><title>clock_gettime (42 samples, 0.02%)</title><rect x="41.5535%" y="261" width="0.0238%" height="15" fill="rgb(212,6,19)" fg:x="73356" fg:w="42"/><text x="41.8035%" y="271.50"></text></g><g><title>__vdso_clock_gettime (27 samples, 0.02%)</title><rect x="41.5620%" y="245" width="0.0153%" height="15" fill="rgb(218,1,36)" fg:x="73371" fg:w="27"/><text x="41.8120%" y="255.50"></text></g><g><title>[[vdso]] (18 samples, 0.01%)</title><rect x="41.5671%" y="229" width="0.0102%" height="15" fill="rgb(246,84,54)" fg:x="73380" fg:w="18"/><text x="41.8171%" y="239.50"></text></g><g><title>eframe::native::epi_integration::EpiIntegration::update (30,440 samples, 17.24%)</title><rect x="24.3455%" y="341" width="17.2431%" height="15" fill="rgb(242,110,6)" fg:x="42978" fg:w="30440"/><text x="24.5955%" y="351.50">eframe::native::epi_integra..</text></g><g><title>std::time::Instant::now (20 samples, 0.01%)</title><rect x="41.5773%" y="325" width="0.0113%" height="15" fill="rgb(214,47,5)" fg:x="73398" fg:w="20"/><text x="41.8273%" y="335.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (20 samples, 0.01%)</title><rect x="41.5773%" y="309" width="0.0113%" height="15" fill="rgb(218,159,25)" fg:x="73398" fg:w="20"/><text x="41.8273%" y="319.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (20 samples, 0.01%)</title><rect x="41.5773%" y="293" width="0.0113%" height="15" fill="rgb(215,211,28)" fg:x="73398" fg:w="20"/><text x="41.8273%" y="303.50"></text></g><g><title>clock_gettime (20 samples, 0.01%)</title><rect x="41.5773%" y="277" width="0.0113%" height="15" fill="rgb(238,59,32)" fg:x="73398" fg:w="20"/><text x="41.8273%" y="287.50"></text></g><g><title>egui::context::Context::style (36 samples, 0.02%)</title><rect x="41.5886%" y="341" width="0.0204%" height="15" fill="rgb(226,82,3)" fg:x="73418" fg:w="36"/><text x="41.8386%" y="351.50"></text></g><g><title>[libc.so.6] (41 samples, 0.02%)</title><rect x="41.6486%" y="325" width="0.0232%" height="15" fill="rgb(240,164,32)" fg:x="73524" fg:w="41"/><text x="41.8986%" y="335.50"></text></g><g><title>epaint::stats::PaintStats::from_shapes (701 samples, 0.40%)</title><rect x="41.6719%" y="325" width="0.3971%" height="15" fill="rgb(232,46,7)" fg:x="73565" fg:w="701"/><text x="41.9219%" y="335.50"></text></g><g><title>epaint::stats::PaintStats::add (502 samples, 0.28%)</title><rect x="41.7846%" y="309" width="0.2844%" height="15" fill="rgb(229,129,53)" fg:x="73764" fg:w="502"/><text x="42.0346%" y="319.50"></text></g><g><title>epaint::stats::PaintStats::with_clipped_primitives (53 samples, 0.03%)</title><rect x="42.0689%" y="325" width="0.0300%" height="15" fill="rgb(234,188,29)" fg:x="74266" fg:w="53"/><text x="42.3189%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain (38 samples, 0.02%)</title><rect x="42.6807%" y="309" width="0.0215%" height="15" fill="rgb(246,141,4)" fg:x="75346" fg:w="38"/><text x="42.9307%" y="319.50"></text></g><g><title>cfree (98 samples, 0.06%)</title><rect x="42.7023%" y="309" width="0.0555%" height="15" fill="rgb(229,23,39)" fg:x="75384" fg:w="98"/><text x="42.9523%" y="319.50"></text></g><g><title>[libc.so.6] (68 samples, 0.04%)</title><rect x="42.7192%" y="293" width="0.0385%" height="15" fill="rgb(206,12,3)" fg:x="75414" fg:w="68"/><text x="42.9692%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (43 samples, 0.02%)</title><rect x="47.9998%" y="293" width="0.0244%" height="15" fill="rgb(252,226,20)" fg:x="84736" fg:w="43"/><text x="48.2498%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (33 samples, 0.02%)</title><rect x="48.0055%" y="277" width="0.0187%" height="15" fill="rgb(216,123,35)" fg:x="84746" fg:w="33"/><text x="48.2555%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;epaint::shape::Shape&gt; (592 samples, 0.34%)</title><rect x="50.3977%" y="277" width="0.3353%" height="15" fill="rgb(212,68,40)" fg:x="88969" fg:w="592"/><text x="50.6477%" y="287.50"></text></g><g><title>emath::rect::Rect::expand (495 samples, 0.28%)</title><rect x="54.5464%" y="261" width="0.2804%" height="15" fill="rgb(254,125,32)" fg:x="96293" fg:w="495"/><text x="54.7964%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (29 samples, 0.02%)</title><rect x="66.0315%" y="245" width="0.0164%" height="15" fill="rgb(253,97,22)" fg:x="116568" fg:w="29"/><text x="66.2815%" y="255.50"></text></g><g><title>epaint::tessellator::Path::add_line_loop (26,948 samples, 15.27%)</title><rect x="54.8268%" y="261" width="15.2650%" height="15" fill="rgb(241,101,14)" fg:x="96788" fg:w="26948"/><text x="55.0768%" y="271.50">epaint::tessellator::Pa..</text></g><g><title>hypotf (7,139 samples, 4.04%)</title><rect x="66.0479%" y="245" width="4.0440%" height="15" fill="rgb(238,103,29)" fg:x="116597" fg:w="7139"/><text x="66.2979%" y="255.50">hypo..</text></g><g><title>__rdl_realloc (20 samples, 0.01%)</title><rect x="87.5174%" y="213" width="0.0113%" height="15" fill="rgb(233,195,47)" fg:x="154498" fg:w="20"/><text x="87.7674%" y="223.50"></text></g><g><title>malloc (38 samples, 0.02%)</title><rect x="87.5338%" y="213" width="0.0215%" height="15" fill="rgb(246,218,30)" fg:x="154527" fg:w="38"/><text x="87.7838%" y="223.50"></text></g><g><title>epaint::tessellator::Path::fill (35,585 samples, 20.16%)</title><rect x="70.0919%" y="261" width="20.1576%" height="15" fill="rgb(219,145,47)" fg:x="123736" fg:w="35585"/><text x="70.3419%" y="271.50">epaint::tessellator::Path::fill</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5,020 samples, 2.84%)</title><rect x="87.4058%" y="245" width="2.8436%" height="15" fill="rgb(243,12,26)" fg:x="154301" fg:w="5020"/><text x="87.6558%" y="255.50">al..</text></g><g><title>alloc::raw_vec::finish_grow (4,873 samples, 2.76%)</title><rect x="87.4891%" y="229" width="2.7604%" height="15" fill="rgb(214,87,16)" fg:x="154448" fg:w="4873"/><text x="87.7391%" y="239.50">al..</text></g><g><title>realloc (4,756 samples, 2.69%)</title><rect x="87.5554%" y="213" width="2.6941%" height="15" fill="rgb(208,99,42)" fg:x="154565" fg:w="4756"/><text x="87.8054%" y="223.50">re..</text></g><g><title>[libc.so.6] (4,167 samples, 2.36%)</title><rect x="87.8890%" y="197" width="2.3605%" height="15" fill="rgb(253,99,2)" fg:x="155154" fg:w="4167"/><text x="88.1390%" y="207.50">[l..</text></g><g><title>[libc.so.6] (4,085 samples, 2.31%)</title><rect x="87.9355%" y="181" width="2.3140%" height="15" fill="rgb(220,168,23)" fg:x="155236" fg:w="4085"/><text x="88.1855%" y="191.50">[..</text></g><g><title>[libc.so.6] (117 samples, 0.07%)</title><rect x="90.1832%" y="165" width="0.0663%" height="15" fill="rgb(242,38,24)" fg:x="159204" fg:w="117"/><text x="90.4332%" y="175.50"></text></g><g><title>epaint::tessellator::Tessellator::tessellate_rect (74,867 samples, 42.41%)</title><rect x="50.7330%" y="277" width="42.4094%" height="15" fill="rgb(225,182,9)" fg:x="89561" fg:w="74867"/><text x="50.9830%" y="287.50">epaint::tessellator::Tessellator::tessellate_rect</text></g><g><title>epaint::tessellator::path::rounded_rectangle (5,107 samples, 2.89%)</title><rect x="90.2495%" y="261" width="2.8929%" height="15" fill="rgb(243,178,37)" fg:x="159321" fg:w="5107"/><text x="90.4995%" y="271.50">ep..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (36 samples, 0.02%)</title><rect x="93.1220%" y="245" width="0.0204%" height="15" fill="rgb(232,139,19)" fg:x="164392" fg:w="36"/><text x="93.3720%" y="255.50"></text></g><g><title>alloc::raw_vec::finish_grow (25 samples, 0.01%)</title><rect x="93.1282%" y="229" width="0.0142%" height="15" fill="rgb(225,201,24)" fg:x="164403" fg:w="25"/><text x="93.3782%" y="239.50"></text></g><g><title>malloc (20 samples, 0.01%)</title><rect x="93.1311%" y="213" width="0.0113%" height="15" fill="rgb(221,47,46)" fg:x="164408" fg:w="20"/><text x="93.3811%" y="223.50"></text></g><g><title>epaint::tessellator::tessellate_shapes (90,527 samples, 51.28%)</title><rect x="42.0990%" y="325" width="51.2802%" height="15" fill="rgb(249,23,13)" fg:x="74319" fg:w="90527"/><text x="42.3490%" y="335.50">epaint::tessellator::tessellate_shapes</text></g><g><title>epaint::tessellator::Tessellator::tessellate_clipped_shape (89,364 samples, 50.62%)</title><rect x="42.7578%" y="309" width="50.6214%" height="15" fill="rgb(219,9,5)" fg:x="75482" fg:w="89364"/><text x="43.0078%" y="319.50">epaint::tessellator::Tessellator::tessellate_clipped_shape</text></g><g><title>epaint::tessellator::Tessellator::tessellate_shape (80,067 samples, 45.36%)</title><rect x="48.0242%" y="293" width="45.3550%" height="15" fill="rgb(254,171,16)" fg:x="84779" fg:w="80067"/><text x="48.2742%" y="303.50">epaint::tessellator::Tessellator::tessellate_shape</text></g><g><title>epaint::tessellator::stroke_path (418 samples, 0.24%)</title><rect x="93.1424%" y="277" width="0.2368%" height="15" fill="rgb(230,171,20)" fg:x="164428" fg:w="418"/><text x="93.3924%" y="287.50"></text></g><g><title>epaint::text::fonts::Fonts::texture_atlas (41 samples, 0.02%)</title><rect x="93.3792%" y="325" width="0.0232%" height="15" fill="rgb(210,71,41)" fg:x="164846" fg:w="41"/><text x="93.6292%" y="335.50"></text></g><g><title>egui::context::Context::tessellate (91,589 samples, 51.88%)</title><rect x="41.6090%" y="341" width="51.8818%" height="15" fill="rgb(206,173,20)" fg:x="73454" fg:w="91589"/><text x="41.8590%" y="351.50">egui::context::Context::tessellate</text></g><g><title>epaint::texture_atlas::TextureAtlas::prepared_discs (156 samples, 0.09%)</title><rect x="93.4024%" y="325" width="0.0884%" height="15" fill="rgb(233,88,34)" fg:x="164887" fg:w="156"/><text x="93.6524%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (140 samples, 0.08%)</title><rect x="93.4115%" y="309" width="0.0793%" height="15" fill="rgb(223,209,46)" fg:x="164903" fg:w="140"/><text x="93.6615%" y="319.50"></text></g><g><title>malloc (29 samples, 0.02%)</title><rect x="93.4743%" y="293" width="0.0164%" height="15" fill="rgb(250,43,18)" fg:x="165014" fg:w="29"/><text x="93.7243%" y="303.50"></text></g><g><title>[iris_dri.so] (72 samples, 0.04%)</title><rect x="94.6010%" y="229" width="0.0408%" height="15" fill="rgb(208,13,10)" fg:x="167003" fg:w="72"/><text x="94.8510%" y="239.50"></text></g><g><title>[iris_dri.so] (390 samples, 0.22%)</title><rect x="94.4271%" y="245" width="0.2209%" height="15" fill="rgb(212,200,36)" fg:x="166696" fg:w="390"/><text x="94.6771%" y="255.50"></text></g><g><title>[iris_dri.so] (1,944 samples, 1.10%)</title><rect x="93.5621%" y="309" width="1.1012%" height="15" fill="rgb(225,90,30)" fg:x="165169" fg:w="1944"/><text x="93.8121%" y="319.50"></text></g><g><title>[iris_dri.so] (1,825 samples, 1.03%)</title><rect x="93.6296%" y="293" width="1.0338%" height="15" fill="rgb(236,182,39)" fg:x="165288" fg:w="1825"/><text x="93.8796%" y="303.50"></text></g><g><title>[iris_dri.so] (1,651 samples, 0.94%)</title><rect x="93.7281%" y="277" width="0.9352%" height="15" fill="rgb(212,144,35)" fg:x="165462" fg:w="1651"/><text x="93.9781%" y="287.50"></text></g><g><title>[iris_dri.so] (1,424 samples, 0.81%)</title><rect x="93.8567%" y="261" width="0.8066%" height="15" fill="rgb(228,63,44)" fg:x="165689" fg:w="1424"/><text x="94.1067%" y="271.50"></text></g><g><title>[libc.so.6] (27 samples, 0.02%)</title><rect x="94.6481%" y="245" width="0.0153%" height="15" fill="rgb(228,109,6)" fg:x="167086" fg:w="27"/><text x="94.8981%" y="255.50"></text></g><g><title>clock_gettime (42 samples, 0.02%)</title><rect x="95.6394%" y="85" width="0.0238%" height="15" fill="rgb(238,117,24)" fg:x="168836" fg:w="42"/><text x="95.8894%" y="95.50"></text></g><g><title>__vdso_clock_gettime (37 samples, 0.02%)</title><rect x="95.6422%" y="69" width="0.0210%" height="15" fill="rgb(242,26,26)" fg:x="168841" fg:w="37"/><text x="95.8922%" y="79.50"></text></g><g><title>[[vdso]] (24 samples, 0.01%)</title><rect x="95.6496%" y="53" width="0.0136%" height="15" fill="rgb(221,92,48)" fg:x="168854" fg:w="24"/><text x="95.8996%" y="63.50"></text></g><g><title>[iris_dri.so] (391 samples, 0.22%)</title><rect x="95.4604%" y="165" width="0.2215%" height="15" fill="rgb(209,209,32)" fg:x="168520" fg:w="391"/><text x="95.7104%" y="175.50"></text></g><g><title>[iris_dri.so] (243 samples, 0.14%)</title><rect x="95.5442%" y="149" width="0.1377%" height="15" fill="rgb(221,70,22)" fg:x="168668" fg:w="243"/><text x="95.7942%" y="159.50"></text></g><g><title>[iris_dri.so] (226 samples, 0.13%)</title><rect x="95.5538%" y="133" width="0.1280%" height="15" fill="rgb(248,145,5)" fg:x="168685" fg:w="226"/><text x="95.8038%" y="143.50"></text></g><g><title>[iris_dri.so] (216 samples, 0.12%)</title><rect x="95.5595%" y="117" width="0.1224%" height="15" fill="rgb(226,116,26)" fg:x="168695" fg:w="216"/><text x="95.8095%" y="127.50"></text></g><g><title>[iris_dri.so] (198 samples, 0.11%)</title><rect x="95.5697%" y="101" width="0.1122%" height="15" fill="rgb(244,5,17)" fg:x="168713" fg:w="198"/><text x="95.8197%" y="111.50"></text></g><g><title>ioctl (33 samples, 0.02%)</title><rect x="95.6632%" y="85" width="0.0187%" height="15" fill="rgb(252,159,33)" fg:x="168878" fg:w="33"/><text x="95.9132%" y="95.50"></text></g><g><title>[iris_dri.so] (691 samples, 0.39%)</title><rect x="95.3652%" y="181" width="0.3914%" height="15" fill="rgb(206,71,0)" fg:x="168352" fg:w="691"/><text x="95.6152%" y="191.50"></text></g><g><title>__libc_calloc (119 samples, 0.07%)</title><rect x="95.6892%" y="165" width="0.0674%" height="15" fill="rgb(233,118,54)" fg:x="168924" fg:w="119"/><text x="95.9392%" y="175.50"></text></g><g><title>[libc.so.6] (60 samples, 0.03%)</title><rect x="95.7226%" y="149" width="0.0340%" height="15" fill="rgb(234,83,48)" fg:x="168983" fg:w="60"/><text x="95.9726%" y="159.50"></text></g><g><title>[iris_dri.so] (1,047 samples, 0.59%)</title><rect x="95.1675%" y="197" width="0.5931%" height="15" fill="rgb(228,3,54)" fg:x="168003" fg:w="1047"/><text x="95.4175%" y="207.50"></text></g><g><title>[iris_dri.so] (1,714 samples, 0.97%)</title><rect x="94.8248%" y="229" width="0.9709%" height="15" fill="rgb(226,155,13)" fg:x="167398" fg:w="1714"/><text x="95.0748%" y="239.50"></text></g><g><title>[iris_dri.so] (1,602 samples, 0.91%)</title><rect x="94.8882%" y="213" width="0.9075%" height="15" fill="rgb(241,28,37)" fg:x="167510" fg:w="1602"/><text x="95.1382%" y="223.50"></text></g><g><title>cfree (50 samples, 0.03%)</title><rect x="95.7674%" y="197" width="0.0283%" height="15" fill="rgb(233,93,10)" fg:x="169062" fg:w="50"/><text x="96.0174%" y="207.50"></text></g><g><title>[libc.so.6] (41 samples, 0.02%)</title><rect x="95.7725%" y="181" width="0.0232%" height="15" fill="rgb(225,113,19)" fg:x="169071" fg:w="41"/><text x="96.0225%" y="191.50"></text></g><g><title>[iris_dri.so] (7,433 samples, 4.21%)</title><rect x="94.6871%" y="293" width="4.2105%" height="15" fill="rgb(241,2,18)" fg:x="167155" fg:w="7433"/><text x="94.9371%" y="303.50">[iris..</text></g><g><title>[iris_dri.so] (7,370 samples, 4.17%)</title><rect x="94.7228%" y="277" width="4.1748%" height="15" fill="rgb(228,207,21)" fg:x="167218" fg:w="7370"/><text x="94.9728%" y="287.50">[iris..</text></g><g><title>[iris_dri.so] (7,315 samples, 4.14%)</title><rect x="94.7540%" y="261" width="4.1437%" height="15" fill="rgb(213,211,35)" fg:x="167273" fg:w="7315"/><text x="95.0040%" y="271.50">[iris..</text></g><g><title>[iris_dri.so] (7,252 samples, 4.11%)</title><rect x="94.7897%" y="245" width="4.1080%" height="15" fill="rgb(209,83,10)" fg:x="167336" fg:w="7252"/><text x="95.0397%" y="255.50">[iri..</text></g><g><title>[libc.so.6] (5,476 samples, 3.10%)</title><rect x="95.7957%" y="229" width="3.1020%" height="15" fill="rgb(209,164,1)" fg:x="169112" fg:w="5476"/><text x="96.0457%" y="239.50">[li..</text></g><g><title>egui_glow::painter::Painter::paint_mesh (7,514 samples, 4.26%)</title><rect x="94.6634%" y="309" width="4.2564%" height="15" fill="rgb(213,184,43)" fg:x="167113" fg:w="7514"/><text x="94.9134%" y="319.50">egui_..</text></g><g><title>core::hash::BuildHasher::hash_one (39 samples, 0.02%)</title><rect x="98.8977%" y="293" width="0.0221%" height="15" fill="rgb(231,61,34)" fg:x="174588" fg:w="39"/><text x="99.1477%" y="303.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (23 samples, 0.01%)</title><rect x="98.9067%" y="277" width="0.0130%" height="15" fill="rgb(235,75,3)" fg:x="174604" fg:w="23"/><text x="99.1567%" y="287.50"></text></g><g><title>&lt;glow::native::Context as glow::HasContext&gt;::color_mask (20 samples, 0.01%)</title><rect x="98.9356%" y="293" width="0.0113%" height="15" fill="rgb(220,106,47)" fg:x="174655" fg:w="20"/><text x="99.1856%" y="303.50"></text></g><g><title>[iris_dri.so] (91 samples, 0.05%)</title><rect x="99.4262%" y="245" width="0.0515%" height="15" fill="rgb(210,196,33)" fg:x="175521" fg:w="91"/><text x="99.6762%" y="255.50"></text></g><g><title>[iris_dri.so] (934 samples, 0.53%)</title><rect x="98.9685%" y="293" width="0.5291%" height="15" fill="rgb(229,154,42)" fg:x="174713" fg:w="934"/><text x="99.2185%" y="303.50"></text></g><g><title>[iris_dri.so] (446 samples, 0.25%)</title><rect x="99.2449%" y="277" width="0.2526%" height="15" fill="rgb(228,114,26)" fg:x="175201" fg:w="446"/><text x="99.4949%" y="287.50"></text></g><g><title>[iris_dri.so] (222 samples, 0.13%)</title><rect x="99.3718%" y="261" width="0.1258%" height="15" fill="rgb(208,144,1)" fg:x="175425" fg:w="222"/><text x="99.6218%" y="271.50"></text></g><g><title>[libc.so.6] (35 samples, 0.02%)</title><rect x="99.4777%" y="245" width="0.0198%" height="15" fill="rgb(239,112,37)" fg:x="175612" fg:w="35"/><text x="99.7277%" y="255.50"></text></g><g><title>egui_glow::painter::Painter::prepare_painting (1,030 samples, 0.58%)</title><rect x="98.9198%" y="309" width="0.5835%" height="15" fill="rgb(210,96,50)" fg:x="174627" fg:w="1030"/><text x="99.1698%" y="319.50"></text></g><g><title>egui_glow::painter::Painter::paint_primitives (10,625 samples, 6.02%)</title><rect x="93.5004%" y="325" width="6.0187%" height="15" fill="rgb(222,178,2)" fg:x="165060" fg:w="10625"/><text x="93.7504%" y="335.50">egui_glo..</text></g><g><title>roundf32 (28 samples, 0.02%)</title><rect x="99.5032%" y="309" width="0.0159%" height="15" fill="rgb(226,74,18)" fg:x="175657" fg:w="28"/><text x="99.7532%" y="319.50"></text></g><g><title>[libm.so.6] (30 samples, 0.02%)</title><rect x="99.5270%" y="293" width="0.0170%" height="15" fill="rgb(225,67,54)" fg:x="175699" fg:w="30"/><text x="99.7770%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (60 samples, 0.03%)</title><rect x="99.5191%" y="309" width="0.0340%" height="15" fill="rgb(251,92,32)" fg:x="175685" fg:w="60"/><text x="99.7691%" y="319.50"></text></g><g><title>egui_glow::painter::Painter::paint_and_update_textures (10,704 samples, 6.06%)</title><rect x="93.4908%" y="341" width="6.0634%" height="15" fill="rgb(228,149,22)" fg:x="165043" fg:w="10704"/><text x="93.7408%" y="351.50">egui_glo..</text></g><g><title>egui_glow::painter::Painter::set_texture (62 samples, 0.04%)</title><rect x="99.5191%" y="325" width="0.0351%" height="15" fill="rgb(243,54,13)" fg:x="175685" fg:w="62"/><text x="99.7691%" y="335.50"></text></g><g><title>egui_glow::painter::clear (192 samples, 0.11%)</title><rect x="99.5542%" y="341" width="0.1088%" height="15" fill="rgb(243,180,28)" fg:x="175747" fg:w="192"/><text x="99.8042%" y="351.50"></text></g><g><title>[iris_dri.so] (162 samples, 0.09%)</title><rect x="99.5712%" y="325" width="0.0918%" height="15" fill="rgb(208,167,24)" fg:x="175777" fg:w="162"/><text x="99.8212%" y="335.50"></text></g><g><title>[iris_dri.so] (49 samples, 0.03%)</title><rect x="99.6352%" y="309" width="0.0278%" height="15" fill="rgb(245,73,45)" fg:x="175890" fg:w="49"/><text x="99.8852%" y="319.50"></text></g><g><title>egui_winit::State::handle_platform_output (44 samples, 0.02%)</title><rect x="99.6630%" y="341" width="0.0249%" height="15" fill="rgb(237,203,48)" fg:x="175939" fg:w="44"/><text x="99.9130%" y="351.50"></text></g><g><title>std::time::Instant::now (41 samples, 0.02%)</title><rect x="99.6879%" y="341" width="0.0232%" height="15" fill="rgb(211,197,16)" fg:x="175983" fg:w="41"/><text x="99.9379%" y="351.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (41 samples, 0.02%)</title><rect x="99.6879%" y="325" width="0.0232%" height="15" fill="rgb(243,99,51)" fg:x="175983" fg:w="41"/><text x="99.9379%" y="335.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (41 samples, 0.02%)</title><rect x="99.6879%" y="309" width="0.0232%" height="15" fill="rgb(215,123,29)" fg:x="175983" fg:w="41"/><text x="99.9379%" y="319.50"></text></g><g><title>clock_gettime (40 samples, 0.02%)</title><rect x="99.6884%" y="293" width="0.0227%" height="15" fill="rgb(239,186,37)" fg:x="175984" fg:w="40"/><text x="99.9384%" y="303.50"></text></g><g><title>__vdso_clock_gettime (27 samples, 0.02%)</title><rect x="99.6958%" y="277" width="0.0153%" height="15" fill="rgb(252,136,39)" fg:x="175997" fg:w="27"/><text x="99.9458%" y="287.50"></text></g><g><title>&lt;eframe::native::run::glow_integration::GlowWinitApp as eframe::native::run::WinitApp&gt;::run_ui_and_paint (147,249 samples, 83.41%)</title><rect x="16.3668%" y="357" width="83.4111%" height="15" fill="rgb(223,213,32)" fg:x="28893" fg:w="147249"/><text x="16.6168%" y="367.50">&lt;eframe::native::run::glow_integration::GlowWinitApp as eframe::native::run::WinitApp&gt;::run_ui_and_paint</text></g><g><title>winit::platform_impl::platform::wayland::window::Window::inner_size (118 samples, 0.07%)</title><rect x="99.7111%" y="341" width="0.0668%" height="15" fill="rgb(233,115,5)" fg:x="176024" fg:w="118"/><text x="99.9611%" y="351.50"></text></g><g><title>eframe::native::run::run_and_return::{{closure}} (147,273 samples, 83.42%)</title><rect x="16.3538%" y="373" width="83.4247%" height="15" fill="rgb(207,226,44)" fg:x="28870" fg:w="147273"/><text x="16.6038%" y="383.50">eframe::native::run::run_and_return::{{closure}}</text></g><g><title>eframe::native::run::run_and_return (147,843 samples, 83.75%)</title><rect x="16.0343%" y="405" width="83.7476%" height="15" fill="rgb(208,126,0)" fg:x="28306" fg:w="147843"/><text x="16.2843%" y="415.50">eframe::native::run::run_and_return</text></g><g><title>winit::platform_impl::platform::wayland::event_loop::EventLoop&lt;T&gt;::run_return (147,843 samples, 83.75%)</title><rect x="16.0343%" y="389" width="83.7476%" height="15" fill="rgb(244,66,21)" fg:x="28306" fg:w="147843"/><text x="16.2843%" y="399.50">winit::platform_impl::platform::wayland::event_loop::EventLoop&lt;T&gt;::run_return</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (147,854 samples, 83.75%)</title><rect x="16.0343%" y="421" width="83.7538%" height="15" fill="rgb(222,97,12)" fg:x="28306" fg:w="147854"/><text x="16.2843%" y="431.50">std::thread::local::LocalKey&lt;T&gt;::with</text></g><g><title>std::time::Instant::now (24 samples, 0.01%)</title><rect x="99.7915%" y="421" width="0.0136%" height="15" fill="rgb(219,213,19)" fg:x="176166" fg:w="24"/><text x="100.0415%" y="431.50"></text></g><g><title>wayland_client::display::Display::flush (36 samples, 0.02%)</title><rect x="99.8051%" y="421" width="0.0204%" height="15" fill="rgb(252,169,30)" fg:x="176190" fg:w="36"/><text x="100.0551%" y="431.50"></text></g><g><title>wl_display_dispatch_queue (19 samples, 0.01%)</title><rect x="99.8482%" y="421" width="0.0108%" height="15" fill="rgb(206,32,51)" fg:x="176266" fg:w="19"/><text x="100.0982%" y="431.50"></text></g><g><title>[unknown] (162,395 samples, 91.99%)</title><rect x="7.8954%" y="437" width="91.9908%" height="15" fill="rgb(250,172,42)" fg:x="13938" fg:w="162395"/><text x="8.1454%" y="447.50">[unknown]</text></g><g><title>exit (18 samples, 0.01%)</title><rect x="99.9060%" y="389" width="0.0102%" height="15" fill="rgb(209,34,43)" fg:x="176368" fg:w="18"/><text x="100.1560%" y="399.50"></text></g><g><title>[libc.so.6] (18 samples, 0.01%)</title><rect x="99.9060%" y="373" width="0.0102%" height="15" fill="rgb(223,11,35)" fg:x="176368" fg:w="18"/><text x="100.1560%" y="383.50"></text></g><g><title>_start (28 samples, 0.02%)</title><rect x="99.9060%" y="437" width="0.0159%" height="15" fill="rgb(251,219,26)" fg:x="176368" fg:w="28"/><text x="100.1560%" y="447.50"></text></g><g><title>__libc_start_main (28 samples, 0.02%)</title><rect x="99.9060%" y="421" width="0.0159%" height="15" fill="rgb(231,119,3)" fg:x="176368" fg:w="28"/><text x="100.1560%" y="431.50"></text></g><g><title>[libc.so.6] (28 samples, 0.02%)</title><rect x="99.9060%" y="405" width="0.0159%" height="15" fill="rgb(216,97,11)" fg:x="176368" fg:w="28"/><text x="100.1560%" y="415.50"></text></g><g><title>egui::context::Context::rect_contains_pointer (19 samples, 0.01%)</title><rect x="99.9405%" y="437" width="0.0108%" height="15" fill="rgb(223,59,9)" fg:x="176429" fg:w="19"/><text x="100.1905%" y="447.50"></text></g><g><title>egui::layout::Layout::next_frame_ignore_wrap (22 samples, 0.01%)</title><rect x="99.9524%" y="437" width="0.0125%" height="15" fill="rgb(233,93,31)" fg:x="176450" fg:w="22"/><text x="100.2024%" y="447.50"></text></g><g><title>glutin::api::egl::EGL (29 samples, 0.02%)</title><rect x="99.9688%" y="437" width="0.0164%" height="15" fill="rgb(239,81,33)" fg:x="176479" fg:w="29"/><text x="100.2188%" y="447.50"></text></g><g><title>[libEGL.so.1.1.0] (29 samples, 0.02%)</title><rect x="99.9688%" y="421" width="0.0164%" height="15" fill="rgb(213,120,34)" fg:x="176479" fg:w="29"/><text x="100.2188%" y="431.50"></text></g><g><title>all (176,534 samples, 100%)</title><rect x="0.0000%" y="469" width="100.0000%" height="15" fill="rgb(243,49,53)" fg:x="0" fg:w="176534"/><text x="0.2500%" y="479.50"></text></g><g><title>sortingvisualiz (176,386 samples, 99.92%)</title><rect x="0.0838%" y="453" width="99.9162%" height="15" fill="rgb(247,216,33)" fg:x="148" fg:w="176386"/><text x="0.3338%" y="463.50">sortingvisualiz</text></g><g><title>winit::platform_impl::platform::wayland::event_loop::EventLoop&lt;T&gt;::run_return (20 samples, 0.01%)</title><rect x="99.9887%" y="437" width="0.0113%" height="15" fill="rgb(226,26,14)" fg:x="176514" fg:w="20"/><text x="100.2387%" y="447.50"></text></g></svg></svg>